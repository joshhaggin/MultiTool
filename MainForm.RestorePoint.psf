<File version="3.1">
  <FileID>58fc88a1-1a7a-4151-82f3-d1f5240124e1</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAP+lSURBVHhe7H0FeBa59zVrLO7u7u7u7u7u7u7u
7m7FireUuru70RZaKG6ltPjC+e7NvCnDy8tud+G38v/mPs95JmOZJJPJOTfJzKTRTDPNNNNMM800
00wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNM
M80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPN
NNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTT
TDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wz
zTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM800
00wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNM
M80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPN
NNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTT
TDPNNNNMM80000wzzTTTTDPNNNNMM80000wzzTTTTDPNNNNMM8000+z37MRPP/7oU6xYUZ/Jkyf7
zJs332fOnHkaNGjQoEGDhv8I5s6d57Nw4SKfNq1b+qRN+4sPcTvj9+3HH38Mb92qFfYdOg6PoBhE
3n6G8LgnGjRo0KBBg4b/CCJuPaXlY1g7eWLChInImjUrdDT/dStapIjP3oPHEHDjCZwCY2HnFw17
DRo0aNCgQcN/CnZ+MfCKfAA33zC0a9f+jwXApAmTfDwCo+EcfAtOATc0aNCgQYMGDf9ROPrHIPDm
Exw9dvKPBcD8+Qt9btxLhEPATTgFatCgQYMGDRr+q3AkERB6+znOnrv0xwKAJ/3F3H1OJ8bCJcgQ
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
gfPFl1/XG106q+Prr+rFF17Uqx1D5NvxVXXpnaeRw4eo46tdtWTTXq2aP11Dcnvr1Ree09PPvxYi
3pEaMaiXvvv8K+rSpaNeffkN9R1coK4dXlKvgUM1dmSBXn4+GPGXXrk3AY+jyUTir7zySiJj0G2Z
HkCmnjratN37pzIGP3kO4dwm+RmX8ZpTwX4Ka9asuZddoJwMQOwA8MFWnDyuw4eOqrquTvV1NTp5
7LiOHTmkjatXaP2WrTp6vEL19dU6tGe/TlbWJJMAD20v1YqSFSrbtV+HDh/W8fIq1VSd1MFDx0Pb
Gm0vXamSVaU6UduoppqTWr+qRGu3H1B9uHb5wd1J36279qmiki9XcEQa6lV+YKdKli/Xhu371dh8
WjXlh7SqpESl+46rsalRB7dtbOu3++41T1Ylkw53l63R8hXrdaTilI4dPqrKcF/lx4/q8NFy1dbV
fubL7HA4HI7MkXUHAMNPBmBYiAZJbRO5JrPwg5F7+jtPJfsAcP7Ud0L5N57UU3fT308GQ/ftp4L8
7af01Se+pj/7VoiMn3tGX3viq8n5c889qydJsX8jcAVj+MzT30lS5c8GQ/psUve1wPO0ng79v/zl
L+nr33xOuYODI/D8N/WVr4b+oc+3vvmN0OeJZIXBt77F0rong17P6s+efFJffzJE2ewtEPRAfi4Y
XQwvBphUP/qjN9E7MlE6hhrDzH0CZOotbW/3jrGHw4w555RTb1yWFUBmKGDy5MnJLoG0w1GgnBcH
xQ4AYBVAfTDAtTXVyaz5uvr6ZHJgc2jX3NQUnAJm09eqITgP9cFY06aBGfmhvqmRbW7rAy+Gti6R
+bI0NreE+tA3tK+pq2/jCm25Xl1DmxPSFPjqqL+rh5W3tQtfuvqGtnaBk/p010Svxiau1Rz0tPsI
XOGa9cFRMW6Hw+FwPDyy7gAUFhYm2x+SwsboEdli2Ih8LSLmCCin3sqRaWflyETZ1j+WqaeP8VLO
kfPkGi++kBjxp59tW4dPOW3gyJTL9PoM71055rofr8kxF7BrWP9YR8sAsJ2jzSnAEcABYLleug/a
4XA4HI4YWXcA2AiIve4ZCiCSxSBi3IiQzchi4HAOkIl8yQCQ/raxcmSMHu3McNIfHviMizpkS60b
L/1tDB6ZMupoQ1v6mBFGTtXReNGB/uiEbrGOcKXjjXXM5N5TeZHJFJBJYQ4Aht84U4cAHA6Hw+Fo
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
MLQUp36JdotxEm0U4yfGbVP8FX056JM4ZhhLyiP6IL4S0In8oh2GryjUxrGg8w1fEBjqEvPxzbli
DKR08SnbGxwAkvh8U6M5+DpBjL+xfDHOUhmGNglHRvRJpIlf1DJ+zSHmcUutREFiFJxszuFkxD0M
y7awty3GXvRBfCYqxkR8uSDSqA6aLzF3ioOxEvNkmGfxVOJQ+dRm0WdxnYg0aUMjpb3qABjngvot
zRk5j+RYiC8QxBchon7DOIqxMsydWqunMDlndI5ezJPUBlEP1S2N58G8iPkR8yKNJ5XzzVgYnhzt
7NHNo7YELk6OOOHgjrT2Oezq1GT/2QFgsT52fVAHQEeG0LByJ/b3sL21D+3mCkbHxiUjjy0FlhZW
sUkrXZFvf3eHbr7fGl/ZwgTGF+QHMQO7OhVmp8YxOjoJ6bU4nSndLOmGtntQ/QKtkqdXVYbIvg6T
Y6OYV4qHsDuQzS9Ij2O3NhYxPrkoZdkmg7ytX8Oj1CD4xBcYHm8fQTgA4qYrVsTiR4HeLOP/u0yr
d2HsqG/SOVvCqIvvqLcp/m3+o+UdW75UHulo+hsl8n8bP1qm+GVDYdiF8Ti2vu8sQ/uOP/aqvmt9
h/O/fu7fHpOj+UVc/EdVwsE6nH74+OFxk8b90PE3Ssq3haWZCQwNj2B1g677vV3p2CvlHej1frxd
h88RYaPjJubycL7jJPXLGH9L3d+1baJ+lXwFQ0NDmFyQYYcMv0gX3Llz57UbDovF+nj0QR2AT4o9
FZpqKzG4LHbbv464qfX396GrqwudnZ3vpJ6eHnR3iXAHqYvi3eg6Jt+Pre7ubjx//hzNzc3fqT+f
ukRf6+vr0d7Wduzx91VP7wv09fXhBc2zYc6Pz/e+Ev0QP7Pb2NgozeVxeX48daCbrnPR774Xveg+
SB8eHoavr+9rNxwWi/XxiB2A70BwUNBrA8hisVgs1qeox9Wt7+8ACA3PKzG5ov5Jq31gGgXljSwW
6y16RCqsbELxsxYWi/WRqndChpFF9fs7AEPzm9KTgJ+yRpd1krfEYrFYLNanLmH8h8i2fS8HYJAc
AHEii8VisVisT1MDpMV3dQCuXLnSpQWwpCbRSSwWi8VisT5NCeMvvo57VPjk7Q7A+fMWvXn5RcjM
zmOxWCwWi/WJK7+gGFcDpI3uDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwjMTf/d3/Bw9G8uTVX18l
AAAAAElFTkSuQmCC</Preview>
  <Form>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
Zb2fe3beDNxh/pvne3AzwxF/297D+Rjat8KhGdz420sm4nkzbK71n//8HzCDaUuz/vv48AeP/wNZ
m8272mr3g5fzP9PWpPuff7KD6WCynpQGdvef/5Jg8F9/os/Bi9/K4b//+W+2NZgmZ9rk4sfLXXP1
z38zpdKf8mw2Hg1W//+fP9n1eDWgp3/+v/Gs3RrrXW05mE3fXovXu9PV9kLSrNV5/bv/o6f/B84H
Xj6dV4bd9urPyprjx0vWctWd/Ls2mHZmxvLf9DvLf5dWrdV6WVppg/m//pz6xL/+VDf38p/Iv4P0
f//6w+LNrrXuf6bd9Uprjf/1R14r40E707XKs1F3+h8lFms9t5+joXg40g2S+D/b+106f2tJ/1bo
nz/t/mDc0fDj/7Cz6UqbjZf/bG/7rclSeFt7v8YP0J+cey5qS+epNg8otZTu+OsecO/O8N6KXbWL
D9bubu9+hffiPPXGAGN6L/9LdCaDKW/OB1qXa626//yB/ccD+ny/73nl2uaJl7/+cZVxazo6+5Rv
Yvut20sIBSu89X/+i3f9TOIevrLBov1I8/Cl4qDXX5VnUldFYGp0lx6+soHIGIn868/Tk4fPl1tK
atrpmv/89+nZy8cdjDz7GP8HG3TzjnU7p/lypNu5xP/YGUL5ev4/fP5lgrsO9ZhWe8TOxjPtn/+W
tdZ0OW/hF1cerJfES//z31K3N+v+qaT+9Sc+X/3rz3Jljbv/YWbjjocrfABwmfVqNZv+eDAqzm38
L1v6PKjp4gtorWbajz/b8uVOwpFPezqfvbbWfN7tcNpA/8yxwocvMPpLX2CunPzdkRf7nS8uFPrN
by3yeU/nq7f2v1J3tRpMe78aK8mn0umniGc27cbmrqTJXngv2r67avcp4Vt3r6LVobfzFG60evc8
n0Gqs93p+ntI9QT/0uY1vEx5fBOd/gAZptahH/6pKEIahd92vF5qraftfld7c2+fhhk//bBGV1kO
Vt3ldU94LXB4ibMNbrx12CsRwwtE7SEA8YwAuzv7FFndUrbB9/W6uqW0N3/qf+XZ/LrwT4wHvSk+
OD4+M8NB08vLSGDEOHgxQ3jbfOtff+g0yb/+OHMmnrV4dtDWZsuZuvpTQuT5U+pqA/Vff8i/n57n
Xi4izlYIWe2R53HhwGMjXiZonBno8WDa9fw3toPjwSu5drIpN/MSEt0xumC3s/VzLwG4F0XPUS/z
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
PkdYo0L13ZOZgnWuYJ0rWOcK1rmCda5gnStY5wrWuYJ1rmCdK1jnCta5gnWuYJ0rWOcK1rmCda5g
nStY5wrWuYJ1rmCdK/gBuYIXYy5POIznpte8fWEWeuklbr/kfL0U8v809n/70gS2JzSai4Gc97iR
rpy7hu6bjXICGxcnz318HtrvykH7J1XKTa3Y11NrpFwOIL2QL1kcEX8wAh4ulpaDLDZeBYNexIBL
xNdffWt4iRHErrN4F3SXZMf/T+P/eROO/n2doWn6hjrDDm+lJxx5Q9MyUm+nMywp30xXaOaG5mVK
30xfOuTwZrqi3dAa9SjqVrrSJ5XbmZc+1bmlzgxuqDPsDW2PfbZzMz25Jentjm6mKz32droi3tAS
DTo305WhdkPzMpJvqDPiDW3Vffl23Km+rN1MV27I7gokdTN9GbC9G+rL5Ia68p+b2ggGXfpWujIc
3Y6FkW/pJCvf0MRMejfkf09C3bih3sg34/ZOFPlGeqJ0bkiRVKZ3K13RaObt/KdLs3yfhtcHgWkV
ZiNbraykTIi2fPOq9n4E6p+G7a+oBYCXZdAqJnq/AU5ck/Z9EnJ6C686mW/1dTL6GadMhTLSkTIJ
ShxsErxTpZjzK6q9BLT6aeGpOEYcJMEybchFUw3Zip3ltwb+f0AkvLzJ51UHqhYWfGXKrhLECiUE
/hHEqtWdfgyhMVLKSgNeCYCmwf9Wao10nZVfrpZpuhZdLPfvL0vzpQozjS3rCD3/QRWZ0G8NFL+y
VtrDpHxaJaaqdTbH1n8q9vzrlGL6sThX1WD6aum0Ii2nepoldSptnUpbp9LWqbR1Km2dSlun0tap
tHUqbZ1KW6fS1qm0dSptnUpbp9LWqbR1Km2dSlun0taptHUqbZ1KW6fSfkoqbVnF/dKrp37JpP01
2v9pWbTQpZd/PYGwLs0mfocsWpFuJMeJu7nk2d972c7YMoLcigvpOXbsz8J2kcuvqXl22c4vk/Np
GG/Vyxoe+98gmUbFEXwdrPfXxfrDbsUSyyn/o5STuO6SunJCPu92uooKWanTX0cHy+H9YXr3XQhW
K8sc+cWkxe9RXOL2FPGk+3Vil3xphj5NMyu8+3A5fBaXjM+GexxMI/AbWfJnX1P30rJ9DFHqlV+8
+OOXf3hGyRl9Ieor6+NLzuiLsPjO94H8nd0Ztu6vzuJDXsk3/tfdTCWh6iQB8HWth9+k777CZ//3
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
U6K1mgZxw3F4+RO6Z/3aPyXefATOCo4I3jkdyjS+9AO9RpJ+zFbHhenfv9n8jx/S+Xbmj1e/fpmw
K5/Df+H/V37nytj/DyD+9UeuTq+v9dTn8r987f/7L5K4/PNbKv8P+tKVkv/ypatLYus6ZTayITIL
2aT7MNNDqR22amJ8fhjt4+JF0Wmo+LNxOW3Pgip5u/7gP7pzxl7M7dP0fe28ZzLHdwOK68TUcAl9
wM2Z0Qip35zC/QrTmGfVcZ8f69Vkr3IjTgXmaBbPYBWXqWwSZGtvrtPDOjs6dNrevyXZgVGs0q60
eGM/+POTCifTqbyEW+H12XbkDWPBGuvYjOLaTJmnlODH5DAkVzoicCMgmGMxdc2QtOK4OgvcbRlA
27hHPjoIvSLX2s4mpMYtzmrFzVbmE970+eE9+Kew33cbvxSSqlIvk89nT/s+HZzFiLtb1rWpV9gj
dwHrKDokMBHPdHLQpeMoCXl84MUC8uu8pfSR+PygxvmKkUd5VSSWfHXOKa4p2NxttdWVaJ5nbNXu
3DBluzG8sGEv3tIiS71NKkbbp3w3MzVYp3PxuFTbRlA+P6yTYKB3xF31fFZx1SO7tV7tTnOZq0Mh
AYaLk402r0/SKrmpFRFqy9gw+KzfxWk82sVR3AYdNWzg4PoJ4gfBWP4KvQ3i8RTwNT2vQdfvr2Jd
bEY+5Jhnny5h8GCxJ3Z+FsUU4GlJWN0DpCdcPcwnQrs0v/zUDurt/6Rvc71i9qffuYl+FPazb/AF
+f0wlv8lHm4Qts63P3m97M99jRmI/4/8VO9ff0vp33xK6fdvr/2/LHf8pW7+t6SNV0qQvt6uyef5
ten/J6UNRQleaUNtSiYj1IpfRcU+saQDr8lutbX99fAkN6vPD1k9tbOx6TMxzRgRT6olK7yHk96W
isHZYnbVPdhd3KMfUM+1kEbUdjdsGj0qEuN+yKgGYLPJbIl6D3hIn0o3OI0YyxhPXrMzWmVHaQtU
1RanYlwNT9ZazBUzdtajrEqLNQTeORPZ/gicHQ+IdQ0JkLMzNeICeToksY5pxZA2SUK7N3cOD86S
6PVAg9n2TLR/cdVfXfP58Z9c9VfXQKL4N1d5omAepYq2l4fy2OMttVylCnPPPVYsxoZYjEtmQvi3
n/OJP50c6vPjXFFH2U6mA1baXW0fxotLbTPPHEZHVw22l/AL797K/aA613Nk2OI1G7DS2IbMpl1h
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</Form>
  <Code><![CDATA[$MainForm_Load = {
	#TODO: Initialize Form Controls here
	Import-Module ActiveDirectory
	
	#-----------------------------
	## hide or show specific output areas in GUI
	#-----------------------------
	$datagridview_MapDrives.Visible = $false
	
	#-----------------------------
	## test for RSAT/AD tools
	#-----------------------------
	if ($(Test-Path "C:\Windows\system32\dsa.msc") -eq $false)
	{
		[System.Windows.Forms.MessageBox]::Show("AD tools not detected. Have you installed them?", "Status", 4)
	}
	
	<#
	#-----------------------------
	## Formatting font colors
	#-----------------------------
	if ($getdate -gt $adminexpire)
	{
		$label_AdminExpiresOn.ForeColor = 'Red'
	}
	elseif ($getdate -gt $adminexpire)
	{
		$label_AdminExpiresOn.ForeColor = 'Yellow'
	}
	else
	{
		$label_AdminExpiresOn.ForeColor = 'White'
	}
	#>
	
	#-----------------------------
	## setting/updating 'output' and 'bin' folders and checking for new files for app
	#-----------------------------
	$checkoutputfolder = Test-Path $fileoutput
	if ($checkoutputfolder -eq $false)
	{
		New-Item $fileoutput -Type directory -Force
	}
	
	Copy-Item '\\kiewitplaza\ktg\Active\kss\KSS_Toolkit\KSS MultiTool\bin\' 'c:\Program Files\KSS\KSS Toolkit\' -Recurse -Force
	
	#-----------------------------
	## checking to see if Log file exists, C:\Windows\Logs\KSSTools\, create if it does not
	#-----------------------------
	$logfolder = Test-Path $LogPath1
	
	if ($logfolder -eq $false)
	{
		new-item -path C:\Windows\Logs -name KSSTools -itemtype directory -Force
	}
	
	#-----------------------------
	## starting new log file
	#-----------------------------
	Log-Start -LogPath $LogPath -LogName "$LogTimeStamp.csv" -ScriptVersion "1.5"
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, MultiTool launched"	
}


$EmailSubmit_Click={
	#TODO: Place custom script here	
	$EmailTo = "ksstools@kiewit.com "
	$EmailBody = $EmailBody -replace "System.Windows.Forms.TextBox, Text: "
	$EmailSubject = $EmailSubject -replace "System.Windows.Forms.TextBox, Text: "
	
	Send-MailMessage -To $EmailTo -Subject $EmailSubject -Body $EmailBody -From $EmailAddress -SmtpServer mail.o365.kiewit.com
	
	$sleep
	$EmailTo.text = " "
	$EmailSubject.clear()
	$EmailBody.clear()
	$sleep
	
	$richtextbox_ConfirmEmailSent.Clear
	$richtextbox_ConfirmEmailSent.AppendText("Message Sent") | Out-String
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Sending email in Contact us tab :: $EmailSubject $EmailBody"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Sending email in Contact us tab"
	
}

$button_DirectReports_AD_Click={
	#TODO: Place custom script here		
	$splitcontainer_AD_User.Visible = $false
	$richtextbox_AD_UsersRight.Visible = $false
	$richtextbox_AD_UsersGroups.Visible = $false
	$groupbox_AD_BulkPW.Visible = $false
	$groupbox_AD_AdvancedSearch.Visible = $false
	$richtextbox_AD_UserEnabled.Visible = $false
	$richtextbox_Email_ADUser.Visible = $false
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace "System.Windows.Forms.TextBox, Text: "
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	try
	{
		$directreports = Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD -or employeeid -like $toolstrip_textbox_User_AD } -Properties directreports | select-object -ExpandProperty directreports | get-aduser -Properties employeeid | select-object Name, employeeid
		if ($directreports.length -eq "0")
		{
			$richtextbox_AD_UsersLeft.Text = "No Results found under this user."
		}
		else
		{
			$richtextbox_AD_UsersLeft.Visible = $false
			$datagridview_AD_DirectReports.Visible = $true
			$AD_DT = ConvertTo-DataTable -InputObject $directreports
			Load-DataGridView -DataGridView $datagridview_AD_DirectReports -Item $AD_DT
		}
	}
	catch
	{
		$richtextbox_AD_UsersLeft.Text = "Error encountered or no results found."
	}
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Direct Report script on AD User tab, Results displayed for user searched: $toolstrip_textbox_User_AD"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Direct reports under AD:User tab"
	
}

$button_ExportDirectReports_AD_Click = {
	#TODO: Place custom script here
	
	$richtextbox_AD_UsersRight.Visible = $false
	$richtextbox_AD_UsersGroups.Visible = $false
	$splitcontainer_AD_User.Visible = $false
	$groupbox_AD_BulkPW.Visible = $false
	$groupbox_AD_AdvancedSearch.Visible = $false
	
	#$groupbox_ADUser_ExtendExpiration.Visible = $false
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace "System.Windows.Forms.TextBox, Text: "
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
	$richtextbox_AD_UsersLeft.Text = "Processing..."
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD -or employeeid -like $toolstrip_textbox_User_AD } -Properties directreports | select-object -ExpandProperty directreports | get-aduser -Properties employeeid | select-object Name, employeeid | Export-Csv "$fileoutput\directreport.csv" -Encoding ascii -NoTypeInformation
	
	Start-Process excel.exe -Argumentlist "$fileoutput\directreport.csv"
	
	<#
	$oXL = New-Object -comobject Excel.Application
	$oXL.Visible = $true
	$oXL.DisplayAlerts = $False
	$file = "$installpath\output\$manager.csv"
	$oXL.workbooks.OpenText($file, 437, 1, 1, 1, $True, $True, $False, $False, $False, $False)
	#>
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Direct Report export script, Results exported :: Script ran for $DirectReports"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Export of direct reports under AD:User tab"
}

$button_CheckADGroups_ChangeOwnerOfGroups_Click={
	#TODO: Place custom script here
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$groupbox_ADGroups.Visible = $true
	$splitcontainer_AD_Group.Visible = $false
	$splitcontainer_AD_Group.Panel1.Visible = $false
	$splitcontainer_AD_Group.Panel2.Visible = $false
	#$richtextbox_ADGroups_Right.Visible = $false
	#$richtextbox_ADGroups_GroupsMember.Visible = $false
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$textbox_OldOwner_ChangeOwnerADGroup = $textbox_OldOwner_ChangeOwnerADGroup -replace "System.Windows.Forms.TextBox, Text: "
	$textbox_OldOwner_ChangeOwnerADGroup = $textbox_OldOwner_ChangeOwnerADGroup.trim()
	$richtextbox_AD_GroupsOutput.Text = "Processing......"
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	$GroupsOwned = get-adgroup -filter { managedby -eq $textbox_OldOwner_ChangeOwnerADGroup } | select samaccountname | Format-Table -AutoSize -HideTableHeaders | Out-String
	if ($GroupsOwned -ne $null)
	{
		$richtextbox_AD_GroupsOutput.Text = "$textbox_OldOwner_ChangeOwnerADGroup owns these groups: $GroupsOwned"
	} else {
		$richtextbox_AD_GroupsOutput.Text = "User owns no groups."
	}
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Get AD groups for Current Owner from Change Owner of AD groups tab, $toolstrip_textbox_User_AD was the value entered"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Checking groups that user owns under AD:Users tab"
	
}

$button_ValidateADAccountNewOwner_ChangeOwnerOfGroups_Click={
	#TODO: Place custom script here
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$groupbox_ADGroups.Visible = $true
	$splitcontainer_AD_Group.Visible = $false
	$splitcontainer_AD_Group.Panel1.Visible = $false
	$splitcontainer_AD_Group.Panel2.Visible = $false
	#$richtextbox_ADGroups_Right.Visible = $false
	#$richtextbox_ADGroups_GroupsMember.Visible = $false
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$textbox_NewOwner_ChangeOwnerADGroup = $textbox_NewOwner_ChangeOwnerADGroup -replace "System.Windows.Forms.TextBox, Text: "
	$textbox_NewOwner_ChangeOwnerADGroup = $textbox_NewOwner_ChangeOwnerADGroup.trim()
	$richtextbox_AD_GroupsOutput.Text = "Processing......"
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	
	$validateADUser = Get-ADUser $textbox_NewOwner_ChangeOwnerADGroup
	if ($validateADUser -ne $Null)
	{
		$richtextbox_AD_GroupsOutput.Text = $textbox_NewOwner_ChangeOwnerADGroup
		$richtextbox_AD_GroupsOutput.AppendText(" does exist.")
		
		#-----------------------------
		## writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Validate AD User script from Change Owner of AD groups tab, $textbox_NewOwner_ChangeOwnerADGroup does exist."
		
	}
	else
	{
		$richtextbox_AD_GroupsOutput.Text = ""
		$richtextbox_AD_GroupsOutput.AppendText("No account found. Please check spelling.")
		
		#-----------------------------
		# writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Validate AD User script from Change Owner of AD groups tab, $textManager2Lookup was the value entered"
		
	}
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Validating new owner account for Group ownership swap under AD:Users tab"
	
}

$button_ChangeOwnerOfGroups_Click={
	#TODO: Place custom script here
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$groupbox_ADGroups.Visible = $true
	$splitcontainer_AD_Group.Visible = $false
	$splitcontainer_AD_Group.Panel1.Visible = $false
	$splitcontainer_AD_Group.Panel2.Visible = $false
	#$richtextbox_ADGroups_Right.Visible = $false
	#$richtextbox_ADGroups_GroupsMember.Visible = $false
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$textbox_OldOwner_ChangeOwnerADGroup = $textbox_OldOwner_ChangeOwnerADGroup -replace "System.Windows.Forms.TextBox, Text: "
	$textbox_NewOwner_ChangeOwnerADGroup = $textbox_NewOwner_ChangeOwnerADGroup -replace "System.Windows.Forms.TextBox, Text: "
	$textbox_OldOwner_ChangeOwnerADGroup = $textbox_OldOwner_ChangeOwnerADGroup.trim()
	$textbox_NewOwner_ChangeOwnerADGroup = $textbox_NewOwner_ChangeOwnerADGroup.trim()
	$richtextbox_AD_GroupsOutput.Text = "Processing......"
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables to get current owner's groups
	#-----------------------------
	$GroupsOwned = get-adgroup -filter { managedby -eq $textbox_OldOwner_ChangeOwnerADGroup }
	
	#-----------------------------
	# update new owner to discovered groups
	#-----------------------------
	ForEach ($Group in $GroupsOwned)
	{
		set-adgroup $Group -managedby $textbox_NewOwner_ChangeOwnerADGroup
	}
	
	#-----------------------------
	# check to see if any groups did not get changed.
	#-----------------------------
	$CheckChangeOwnerOfADGroup = $null
	$CheckChangeOwnerOfADGroup = get-adgroup -filter { managedby -eq $textbox_OldOwner_ChangeOwnerADGroup } | select samaccountname | Format-Table -AutoSize -HideTableHeaders | Out-String
	
	if ($CheckChangeOwnerOfADGroup -eq $null)
	{
		$richtextbox_AD_GroupsOutput.Text = "All groups have changed ownership"
		
		#-----------------------------
		# writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Change AD User script from Change Owner of AD groups tab, Groups ownership changed to $textbox_NewOwner_ChangeOwnerADGroup succesfully"
		
	}
	else
	{
		$richtextbox_AD_GroupsOutput.Text = "Below is a list of any groups that were not changed:"
		$richtextbox_AD_GroupsOutput.AppendText($CheckChangeOwnerOfADGroup)
		
		#-----------------------------
		# writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Change AD User script from Change Owner of AD groups tab, Groups ownership changed to $textbox_NewOwner_ChangeOwnerADGroup failed :: $CheckChangeOwnerOfADGroup"
		
	}
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Changing ownership of Groups under AD:Users tab"
	
}

$button_LookUpMembers_UsersInGroup_Click={
	#TODO: Place custom script here
	
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$groupbox_ADGroups.Visible = $false
	$datagridview_ADGroupMember.Visible = $true
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
	$richtextbox_AD_GroupsOutput.Text = "Processing......"

	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	$AD_DT = ConvertTo-DataTable -InputObject $(Get-ADGroupMember $toolstrip_textbox_User_AD -Recursive | Get-ADUser -Properties samaccountname | Select-Object samaccountname)
	Load-DataGridView -DataGridView $datagridview_ADGroupMember -Item $AD_DT
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$(Get-Date).tostring('MM-dd-yyyy') $(get-date -UFormat %R), $userName, $pcname, Running Look up group members script from Users in groups tab, $toolstrip_textbox_User_AD was the value entered"

	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, looking up members of a group in AD:Users tab"
	
}

$button_ExportMembersList_UsersInGroups_Click={
	#TODO: Place custom script here
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$richtextbox_AD_GroupsOutput.Text = "Processing......"
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	Get-ADGroupMember $toolstrip_textbox_User_AD.text -Recursive | Get-ADUser -Properties samaccountname | select samaccountname | Sort-Object | Export-Csv "c:\Temp\$($toolstrip_textbox_User_AD.Text).csv"
	
	Start-Process "c:\Temp\$($toolstrip_textbox_User_AD.Text).csv"
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Look up group members script from Users in groups tab, $toolstrip_textbox_User_AD was the value entered and it was successfully exported"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Exporting users in a group in AD:Users tab"
	
}

$button_SearchForUser_DirectReports_Click={
	#TODO: Place custom script here
	
	$MainForm.Refresh()
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$textManager2Lookup = $textManager2Lookup -replace $replace
	$richtext_DirectReports.Text = "Searching......"
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	Wait-Job -Id { $SearchForUser = search-aduser $textManager2Lookup }
	#Wait-Job
	$richtext_DirectReports.Text = ($SearchForUser)
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Search user script from Direct Reports tab, $textManager2Lookup was the value entered :: results were $SearchForUser"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Running Search user script from Direct Reports tab"
	
	
}

$button_ReviewLogsInFileExpl_Click={
	#TODO: Place custom script here
	
	Invoke-Item $LogPath1
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching windows explorer to \logs"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Reviewing log files in File Explorer"
	
	
}

$button_LoadLogFiles_Click={
	#TODO: Place custom script here
	$richtextbox_Logs.Clear()
	
	$logFileNames = Get-ChildItem "$LogPath1\*.*" -Name | Sort-Object -Descending | Format-Table Name | Out-String
	foreach ($logfilename in $logFileNames) {
		$richtextbox_Logs.Text = $logfilename
	}
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Listing Log files in GUI"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Listing Log files in GUI"
}

$button_ReviewInGUI_Click={
	#TODO: Place custom script here
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$textbox_LogFileToReview = $textbox_LogFileToReview -replace $replace
	$textbox_LogFileToReview = $textbox_LogFileToReview.trim()
	
	$logFileContent = Get-Content "$LogPath1\$textbox_LogFileToReview" | Out-String
	$richtextbox_Logs.Clear()
	$richtextbox_Logs.AppendText($logFileContent)
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Displaying log file in GUI, Script ran. $textbox_LogFileToReview displayed in GUI."
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Reviewing Log Files in GUI"
	
}

$button_ReviewInNotepad_Click={
	#TODO: Place custom script here
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$textbox_LogFileToReview = $textbox_LogFileToReview -replace $replace
	$textbox_LogFileToReview = $textbox_LogFileToReview.trim()
	
	notepad "$LogPath1\logs\$textbox_LogFileToReview"
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Displaying log file in notepad, Script ran. $textbox_LogFileToReview displayed in notepad."
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Viewing log file in notepad"
	
}

$button_EmailLogFiles_Click={
	#TODO: Place custom script here
	
	Add-Type -assembly "system.io.compression.filesystem"
	[io.compression.zipfile]::CreateFromDirectory($LogPath, $output)
	
	Send-MailMessage -From "ksstools@kiewit.com" -To "ksstools@kiewit.com" -Subject "All logs from Kietools KSS Edition" -Attachments $output -SmtpServer mail.o365.kiewit.com
	
	Remove-Item $output -Force
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Emailing log files to ksstools, $output"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Emailing log files to ksstools"
	
}

$button_GetNTFSPermissions_Click= {
	#TODO: Place custom script here
	$Error.clear()
	
	try
	{
		$results = $(Get-Acl -Path $textbox_NTFSPermissions.Text).access
		
		$acl_permissions = @()
		foreach ($identity in $results)
		{
			$acl_permissions += $identity | Where-Object { $_.identityreference -notlike "S-1-5-21-*" }
		}
		
		$datagridview_NTFS_AcessList.Visible = $true
		$richtextbox_NTFSPermissions.Visible = $false
		
		$NTFS_DT = ConvertTo-DataTable -InputObject $($acl_permissions | Select-Object FileSystemRights, AccessControlType, IdentityReference, IsInherited)
		Load-DataGridView -DataGridView $datagridview_NTFS_AcessList -Item $NTFS_DT
	}
	catch
	{
		$datagridview_NTFS_AcessList.Visible = $false
		$richtextbox_NTFSPermissions.Visible = $true
		$richtextbox_NTFSPermissions.Text = $Error.Exception.Message
	}
	
	$textbox_NTFS_ADGroup.Clear()
	$textbox_NTFS_ADGroupApproval.Clear()
	$textbox_NTFS_ADGroupOwner.Clear()
	$textbox_NTFS_ADGroupOwnerEmail.Clear()
	$richtextbox_NTFS_OwnerInfoError.Clear()
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Looking up NTFS permisions, File share looked up: $richtextbox_NTFS_OwnerInfoError"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Looking up NTFS permisions"
}

$buttonClearpassLauncher_Click={
	#TODO: Place custom script here
	
	$url = "https://clearpass.kiewit.com/tips/tipsLogin.action"
	$username = [environment]::UserName
	#$password = "gibberish"
	
	
	$ie = New-Object -com internetexplorer.application;
	$ie.visible = $true;
	$ie.navigate($url);
	
	
	while ($ie.Busy -eq $true)
	{
		Start-Sleep -Milliseconds 1000;
	}
	$ie.Document.getElementById("username").value = $username
	#$ie.Document.getElementByID("password").value = $password
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Clearpass web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Clearpass web interface"
	
}

$button_Unlock_Click={
	#TODO: Place custom script here
	$richtextbox_AD_UsersRight.Visible = $false
	$richtextbox_AD_UsersGroups.Visible = $false
	$splitcontainer_AD_User.Visible = $false
	$groupbox_AD_BulkPW.Visible = $false
	$richtextbox_AD_UsersLeft.Visible = $true
	$datagridview_AD_DirectReports.Visible = $false
	$groupbox_AD_AdvancedSearch.Visible = $false
	$richtextbox_AD_UserEnabled.Visible = $false
	$richtextbox_Email_ADUser.Visible = $false
	
	#-----------------------------
	# cleaning up and defining variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
	$sleep
	
	#-----------------------------
	# unlock on PDC
	#-----------------------------
	if ($toolstrip_textbox_User_AD -ne $null)
	{
		Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD -or employeeid -like $toolstrip_textbox_User_AD } | Unlock-ADAccount 

		$lockedstill = Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD -or employeeid -like $toolstrip_textbox_User_AD } –properties lockedout | Select-Object lockedout
		$sleep
		If ($lockedstill.lockedout -eq $true)
		{
			$richtextbox_AD_UsersLeft.Text = "Unlock failed. Please try again with ADUC."
		}
		else
		{
			$richtextbox_AD_UsersLeft.Text = "User is now unlocked on PDC. Replication can take up to 10 minutes for all DCs. `n"
		}
		
		#-----------------------------
		# unlocking on all DCs
		#-----------------------------
		$unlock_code =
		{
			$DCs = Get-ADDomainController -Filter *
			
			foreach ($DC in $DCs)
			{
				Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD -or employeeid -like $toolstrip_textbox_User_AD } | Unlock-ADAccount -Server $DC
			}
		}
		
		Start-Job $unlock_code
		
		#-----------------------------
		# continue to unlock for 5 minutes
		#-----------------------------
		
		$code = {
			$i = 0
			do
			{
				Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD -or employeeid -like $toolstrip_textbox_User_AD } | unlock-adaccount
				sleep -Seconds 5
				$i = $i + 1
			}
			until ($i -eq "120")
		}
		
		Start-Job $code
	}
	else
	{
		$richtextbox_AD_UsersLeft.Text = "Please enter a name of a user to unlock."
	}
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Unlocking user, $toolstrip_textbox_User_AD is now unlocked"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Unlocking user under AD:User tab"
	
}

$button_ClearpassLauncher_Click={
	#TODO: Place custom script here
	
	Start-Process "https://clearpass.kiewit.com/tips/welcome.action"

	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching clearpass website"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching clearpass website"
	
}

$button_LogRythmViaChrome_Click={
	#TODO: Place custom script here
	
	$chromex64exists = Test-Path "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
	$chromex86exists = Test-Path "C:\Program Files\Google\Chrome\Application\chrome.exe"
	
	if (($chromex64exists -eq $true) -or ($chromex86exists -eq $true))
	{
		Start-Process chrome.exe lr.kiewitplaza.com
	}
	else
	{
		$richtextbox_AD_UsersLeft.Text = "Chrome does not seem to be installed"
	}
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Logrythm website in Chrome browser"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Logrythm website in Chrome browser"
	
}

$button_LockoutStatusTool_AD_Click={
	#TODO: Place custom script here
	
	Start-Process $lockoutpath -WorkingDirectory "C:\Program Files (x86)"
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching lockout status tool"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching lockout status tool"
}

$toolstripbutton_GetInfo_ADUser_Click = {
	#TODO: Place custom script here
	$Error.clear()
	
	$groupbox_ADuser_Output.Visible = $true
	$splitcontainer_AD_User.Visible = $true
	$groupbox_AD_BulkPW.Visible = $false
	$groupbox_AD_AdvancedSearch.Visible = $false
	$richtextbox_AD_UserEnabled.Visible = $true
	$richtextbox_Email_ADUser.Visible = $true
	
	#-----------------------------
	# formatting output for AD object
	#-----------------------------
	$formatgivenname = @{ Label = ''; Expression = { $objecttype.givenname } }
	$formatlastname = @{ Label = ''; Expression = { $objecttype.sn } }
	$formatupn = @{ Label = ''; Expression = { $objecttype.displayname } }
	$formatname = @{ Label = ''; Expression = { $objecttype.name } }
	$formatupn1 = @{ Label = ''; Expression = { $objecttype.userPrincipalName } }
	$samaccountname = @{ Label = ''; Expression = { $objecttype.samaccountname } }
	$employeeid = @{ Label = ''; Expression = { $objecttype.employeeid } }
	$Title = @{ Label = ''; Expression = { $objecttype.title } }
	
	$district = @{ Label = ''; Expression = { $objecttype.company } }
	$formatemail = @{ Label = ''; Expression = { $objecttype.mail } }
	$ipphone = @{ Label = ''; Expression = { $objecttype.ipphone } }
	$mobilephone = @{ Label = ''; Expression = { $objecttype.mobile } }
	$siteid = @{ Label = ''; Expression = { $objecttype.physicalDeliveryOfficeName } }
	
	$lockout = @{ label = ''; expression = { $objecttype.lockouttime } }
	$enabled = @{ label = ''; expression = { $objecttype.enabled } }
	$UserOU = @{ label = ''; expression = { ($objecttype.CanonicalName -replace "KIEWITPLAZA.com/") } }
	$accountexpires = @{ Label = ''; Expression = { $objecttype.AccountExpirationDate } }
	$passwordlastset = @{ Label = ''; Expression = { [datetime]::fromFileTime($objecttype.pwdlastset) } }
	
	$hidefromGAL = @{ Label = ''; Expression = { $objecttype.msExchHideFromAddressLists } }
	
	$accountcreated = @{ Label = ''; Expression = { $objecttype.whenCreated } }
	$accountudpated = @{ Label = ''; Expression = { $objecttype.whenChanged } }
	
	$sip = "msRTCSIP-PrimaryUserAddress"
	$formatSIP = @{ Label = ''; Expression = { $objecttype.$sip } }
	
	$space = @{ Label = ''; Expression = { " " } }
	$blank = @{ Label = ''; Expression = { "-------------------------------------------------" } }
	$divider = "----------------------------------------------"
	
	$ownerformatting = @{ Label = ''; Expression = { $owner.samaccountname } }
	
	$description = @{ Label = ''; Expression = { $objecttype.description } }
	
	#-----------------------------
	# formatting output for Exchange object
	#-----------------------------
	$formatCustomAttribute1 = @{ Label = ''; Expression = { $objecttype.extensionAttribute1 } }
	$formatCustomAttribute11 = @{ Label = ''; Expression = { $objecttype.extensionAttribute11 } }
	$formatCustomAttribute12 = @{ Label = ''; Expression = { $objecttype.extensionAttribute12 } }
	$formatGAL = @{ Label = ''; Expression = { $objecttype.msExchHideFromAddressLists } }
	
	#-----------------------------
	# searching for object
	#-----------------------------
	
	$objecttype = search-AD -adobject $toolstrip_textbox_User_AD.Text
	
	if ($objecttype -eq $null)
	{
		$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.Text
		$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
		
		$objecttype = search-AD -adobject $toolstrip_textbox_User_AD
	}
	
	if ($objecttype -eq $null)
	{
		#$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.Text
		$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
		$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.replace(' ', '')
		
		$objecttype = search-AD -adobject $toolstrip_textbox_User_AD
	}
	
	if ($objecttype -eq $null)
	{
		#$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.Text
		$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
		$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.replace(' ', '.')
		
		$objecttype = search-AD -adobject $toolstrip_textbox_User_AD
	}
	
	#-----------------------------
	# checking tab and displaying proper info per tab
	#-----------------------------
	if ($tabcontrol_MS.SelectedTab -eq $tabpage_MS_AD)
	{
		$tabcontrol_AD.SelectedTab = $tabpage_AD_Users
		
		if ($objecttype -eq $null)
		{
			$richtextbox_AD_UsersGroups.visible = $false
			$richtextbox_AD_UsersRight.visible = $false
			$splitcontainer_AD_User.Visible = $false
			$richtextbox_AD_UsersLeft.Visible = $false
			$groupbox_AD_AdvancedSearch.Visible = $true
			$groupbox_AD_AdvancedSearch.Text = "No results found. Please enter a valid PERNR or [partial] username, displayname, or email."
			
		}
		elseif ($objecttype.count -gt "1" -or $objecttype.length -gt "1")
		{
			$tabcontrol_AD.SelectedTab = $tabpage_AD_Search
			
			$AD_DT = ConvertTo-DataTable -InputObject $($objecttype | Select-Object ObjectClass, sAMAccountName, Name, Mail, EmployeeID, Title, company, physicalDeliveryOfficeName)
			$AD_DT.Columns[6].ColumnName = "District"
			$AD_DT.Columns[7].ColumnName = "Site ID"
			
			Load-DataGridView -DataGridView $datagridview_ADObjectSearch -Item $AD_DT
		}
		elseif ($objecttype.objectclass -eq "group")
		{
			$toolstrip_textbox_User_AD.Clear()
			$toolstrip_textbox_User_AD.Text = $objecttype.samaccountname
			$tabcontrol_AD.SelectedTab = $tabpage_AD_Groups
			
			$groupbox_ADGroups_ChangeCustom.Visible = $false
			$groupbox_ADGroups.Visible = $true
			$datagridview_ADGroupMember.Visible = $false
			$splitcontainer_AD_Group.Visible = $true
			$splitcontainer_AD_Group.Panel1.Visible = $true
			$splitcontainer_AD_Group.Panel2.Visible = $true
			$groupbox_AD_AdvancedSearch.Visible = $false
			$groupbox_ADGroups_MassChange.Visible = $true
			
			$owner = Get-ADUser $objecttype.managedby
			
			$objectlist = $objecttype | format-list $formatname, $ownerformatting, $blank, $district, $formatemail, $hidefromGAL, $blank, $accountcreated, $accountudpated, $blank, $description | Out-String
			
			$richtextbox_AD_GroupsOutput.Text = "This is a Group `n"
			$richtextbox_AD_GroupsOutput.AppendText(" `n")
			$richtextbox_AD_GroupsOutput.AppendText("Display Name:`n")
			$richtextbox_AD_GroupsOutput.AppendText("Owner:`n")
			$richtextbox_AD_GroupsOutput.AppendText(" `n")
			$richtextbox_AD_GroupsOutput.AppendText("District:`n")
			$richtextbox_AD_GroupsOutput.AppendText("Email:`n")
			$richtextbox_AD_GroupsOutput.AppendText("Hidden from GAL:`n")
			$richtextbox_AD_GroupsOutput.AppendText(" `n")
			$richtextbox_AD_GroupsOutput.AppendText("Account created: `n")
			$richtextbox_AD_GroupsOutput.AppendText("Account last modified: `n")
			$richtextbox_AD_GroupsOutput.AppendText(" `n")
			$richtextbox_AD_GroupsOutput.AppendText("Description:")
			
			$richtextbox_ADGroups_Right.Text = "$objectlist"
			
			$groups = $objecttype.memberof -replace ",OU=.*"
			$groups1 = $groups -replace "CN=" | Sort-Object | out-string
			$richtextbox_ADGroups_GroupsMember.Text = "Groups this is a member of:"
			$richtextbox_ADGroups_GroupsMember.AppendText(" `n")
			$richtextbox_ADGroups_GroupsMember.AppendText("$groups1")
			
		}
		elseif ($objecttype.objectclass -eq "computer")
		{
			$toolstrip_textbox_User_AD.Text = $($objecttype.samaccountname).replace("$","")
			$tabcontrol_AD.SelectedTab = $tabpage_AD_PCs
			$toolstripbutton_PCInfo_AD.performclick()
		}
		elseif ($objecttype.objectclass -eq "contact")
		{
			$tabcontrol_AD.SelectedTab = $tabpage_AD_Contacts
			$toolstrip_textbox_User_AD.Text = $objecttype.name
			
			$splitcontainer_AD_User.Visible = $true
			$richtextbox_AD_ContactsLeft.Visible = $true
			$richtextbox_AD_ContactsLeft.Clear()
			$richtextbox_AD_ContactRight.Visible = $true
			$richtextbox_AD_ContactRight.Clear()
			$richtextbox_AD_ContactOther.Visible = $true
			$richtextbox_AD_ContactOther.Clear()
			$groupbox_AD_AdvancedSearch.Visible = $false
			
			$owner = Get-ADUser $objecttype.manager

			$objectlist = $objecttype | format-list $formatgivenname, $formatlastname, $formatupn, $blank, $ownerformatting, $blank, $district, $siteid, $blank, $accountcreated, $accountudpated, $blank, $formatemail, $hidefromGAL, $blank, $description | Out-String
			
			$richtextbox_AD_ContactsLeft.Text = "This is a Contact `n"
			$richtextbox_AD_ContactsLeft.AppendText(" `n")
			$richtextbox_AD_ContactsLeft.AppendText("First name: `n")
			$richtextbox_AD_ContactsLeft.AppendText("Last Name: `n")
			$richtextbox_AD_ContactsLeft.AppendText("Display Name:`n")
			$richtextbox_AD_ContactsLeft.AppendText(" `n")
			$richtextbox_AD_ContactsLeft.AppendText("Owner/Manager: `n")
			$richtextbox_AD_ContactsLeft.AppendText(" `n")
			$richtextbox_AD_ContactsLeft.AppendText("District:`n")
			$richtextbox_AD_ContactsLeft.AppendText("Site ID: `n")
			$richtextbox_AD_ContactsLeft.AppendText(" `n")
			$richtextbox_AD_ContactsLeft.AppendText("Account created: `n")
			$richtextbox_AD_ContactsLeft.AppendText("Account last modified: `n")
			$richtextbox_AD_ContactsLeft.AppendText(" `n")
			$richtextbox_AD_ContactsLeft.AppendText("Email:`n")
			$richtextbox_AD_ContactsLeft.AppendText("Hidden from GAL:`n")
			$richtextbox_AD_ContactsLeft.AppendText(" `n")
			$richtextbox_AD_ContactsLeft.AppendText("Desccription: `n")
			
			$richtextbox_AD_ContactRight.Text = "$objectlist"
			
			$groups = $objecttype.memberof -replace ",OU=.*"
			$groups1 = $groups -replace "CN=" | Sort-Object | out-string
			$richtextbox_AD_ContactOther.Text = "Groups the contact is a member of: `n"
			$richtextbox_AD_ContactOther.AppendText("`n")
			$richtextbox_AD_ContactOther.AppendText($groups1)
			
		}
		
		#-----------------------------------------
		# User accounts
		#-----------------------------------------
		elseif ($objecttype.objectclass -eq "user")
		{
			$picturebox_ADUser.Image = $objecttype.thumbnailPhoto
			$toolstrip_textbox_User_AD.Text = $objecttype.samaccountname
			
			#----------------------------------------------------------
			# extensionatribute12: Shared mailbox or Conference Room
			#----------------------------------------------------------
			if (($objecttype.extensionAttribute12 -eq "MBX=ST;TYPE=SHARED;") -or ($objecttype.extensionAttribute12 -eq "MBX=ST; SHAREDMBX;"))
			{
				$tabcontrol_AD.SelectedTab = $tabpage_AD_Special
				
				$formatmanager = @{ Label = ''; Expression = { $(Get-ADUser $_.manager).samaccountname } }
				
				$userinfodisplay = $objecttype | Format-List $formatupn, $samaccountname, $formatmanager, $district, $formatemail, $siteid, $UserOU | Out-String
				$richtextbox_AD_SpecialLeft.Text = "This is a shared mailbox `n"
				$richtextbox_AD_SpecialLeft.appendText("`n")
				$richtextbox_AD_SpecialLeft.appendText("Display Name:`n")
				$richtextbox_AD_SpecialLeft.appendText("sAMAccountName:`n")
				$richtextbox_AD_SpecialLeft.appendText("Owner of Mailbox:`n")
				$richtextbox_AD_SpecialLeft.appendText("District:`n")
				$richtextbox_AD_SpecialLeft.appendText("Email:`n")
				$richtextbox_AD_SpecialLeft.appendText("Site ID:`n")
				$richtextbox_AD_SpecialLeft.appendText("OU:`n")
				
				$richtextbox_AD_SpecialRight.visible = $true
				$richtextbox_AD_SpecialRight.Text = $userinfodisplay
				
			}
			elseif (($objecttype.extensionAttribute12 -like "*RESMBX=roomrba;") -or ($objecttype.extensionAttribute12 -like "*TYPE=RESOURCE*"))
			{
				$tabcontrol_AD.SelectedTab = $tabpage_AD_Users
				
				#$datagridview_ADObjectSearch.Visible = $false
				$splitcontainer_AD_User.Visible = $true
				$richtextbox_AD_UsersLeft.Visible = $true
				$richtextbox_AD_UsersLeft.Clear()
				$richtextbox_AD_UsersRight.Visible = $true
				$richtextbox_AD_UsersRight.Clear()
				$richtextbox_AD_UsersGroups.Visible = $true
				$richtextbox_AD_UsersGroups.Clear()
				$richtextbox_Email_ADUser.Clear()
				
				$formatmanager = @{ Label = ''; Expression = { $(Get-ADUser $_.manager).samaccountname } }
				
				$userinfodisplay = $objecttype | Format-List $formatupn, $samaccountname, $formatmanager, $district, $formatemail, $siteid, $UserOU | Out-String
				$richtextbox_AD_UsersLeft.Text = "This is a Conference Room `n"
				$richtextbox_AD_UsersLeft.appendText("`n")
				$richtextbox_AD_UsersLeft.appendText("Display Name:`n")
				$richtextbox_AD_UsersLeft.appendText("sAMAccountName:`n")
				$richtextbox_AD_UsersLeft.appendText("Owner of Mailbox:`n")
				$richtextbox_AD_UsersLeft.appendText("District:`n")
				$richtextbox_AD_UsersLeft.appendText("Email:`n")
				$richtextbox_AD_UsersLeft.appendText("Site ID:`n")
				$richtextbox_AD_UsersLeft.appendText("OU:`n")
				
				$richtextbox_AD_UsersRight.Text = $userinfodisplay
				
			}
			
			#-----------------------------------------
			# It is a user account
			#-----------------------------------------
			else
			{
				#$datagridview_ADObjectSearch.Visible = $false
				$splitcontainer_AD_User.Visible = $true
				$richtextbox_AD_UsersLeft.Visible = $true
				$richtextbox_AD_UsersLeft.Clear()
				$richtextbox_AD_UsersRight.Visible = $true
				$richtextbox_AD_UsersRight.Clear()
				$richtextbox_AD_UsersGroups.Visible = $true
				$richtextbox_AD_UsersGroups.Clear()
				$groupbox_AD_AdvancedSearch.Visible = $false
				
				
				$objecttype = Get-ADUser $objecttype -properties *
				#-----------------------------------------
				# looking up enabled status
				#-----------------------------------------
				$enabled1 = $objecttype.enabled
				if ($enabled1 -eq $true)
				{
					$richtextbox_AD_UserEnabled.ForeColor = 'Black'
					$richtextbox_AD_UserEnabled.Text = $enabled1
				}
				else
				{
					$richtextbox_AD_UserEnabled.ForeColor = 'Red'
					$richtextbox_AD_UserEnabled.Text = $enabled1
				}
				
				#-----------------------------------------
				# looking up expiration date
				#-----------------------------------------
				#$accountexpires = @{ Label = ''; Expression = { $objecttype.AccountExpirationDate } }
				if ($objecttype.AccountExpirationDate -lt $(Get-Date))
				{
						$richtextbox_AD_UserExpired.ForeColor = 'Red'
						$richtextbox_AD_UserExpired.Text = $objecttype.AccountExpirationDate
				}
				else
				{
						$richtextbox_AD_UserExpired.ForeColor = 'Black'
						$richtextbox_AD_UserExpired.Text = $objecttype.AccountExpirationDate
				}
					
				#-----------------------------------------
				# check if manager is enabled, if not, look up next level
				#-----------------------------------------
				$managerenabled = Get-ADUser $objecttype.manager -Properties enabled, title
				
				if ($managerenabled.enabled -eq $false)
				{
					$managersmanager = Get-ADUser $managerenabled -Properties title
					$managersmanager = $managersmanager.samaccountname
					$managersmanagertitle = $managersmanager.title
					$formatmanager = @{ Label = ''; Expression = { "Manager disabled. Next Level: $managersmanager" } }
					$formatmanagertitle = @{ Label = ''; Expression = { "$managersmanagertitle" } }
				}
				else
				{
					$formatmanager = @{ Label = ''; Expression = { $managerenabled.sAMAccountName } }
					$formatmanagertitle = @{ Label = ''; Expression = { $managerenabled.title } }
				}
				
				#-----------------------------------------
				# formatting email alias's
				#-----------------------------------------
				$alias = @()
				
				foreach ($proxy in $objecttype.proxyaddresses)
				{
					if ($proxy -notlike "x500*" -and $proxy -notlike "*@mgd.kiewit.com" -and $proxy -notlike "x400*")
					{
						$alias += $proxy
					}
				}
				
				$richtextbox_AD_UsersLeft.Text = "This is a user acccount"
				$richtextbox_AD_UsersLeft.appendText(" `n")
				$richtextbox_AD_UsersLeft.appendText(" `n")
				$richtextbox_AD_UsersLeft.appendText("First name: `n")
				$richtextbox_AD_UsersLeft.appendText("Last Name: `n")
				$richtextbox_AD_UsersLeft.appendText("Display Name:`n")
				$richtextbox_AD_UsersLeft.appendText("UPN:`n")
				$richtextbox_AD_UsersLeft.appendText("sAMAccountName:`n")
				$richtextbox_AD_UsersLeft.appendText("Employee ID:`n")
				$richtextbox_AD_UsersLeft.appendText("Title:`n")
				$richtextbox_AD_UsersLeft.appendText("$divider `n")
				$richtextbox_AD_UsersLeft.appendText("Supervisor:`n")
				$richtextbox_AD_UsersLeft.appendText("Supervisor's Title:`n")
				$richtextbox_AD_UsersLeft.appendText("$divider `n")
				$richtextbox_AD_UsersLeft.appendText("District:`n")
				$richtextbox_AD_UsersLeft.appendText("Site ID:`n")
				$richtextbox_AD_UsersLeft.appendText("IP Phone:`n")
				$richtextbox_AD_UsersLeft.appendText("Cell number:`n")
				$richtextbox_AD_UsersLeft.appendText("$divider `n")
				$richtextbox_AD_UsersLeft.appendText("Lockout Time: `n")
				$richtextbox_AD_UsersLeft.appendText("Is the account Enabled:`n")
				$richtextbox_AD_UsersLeft.appendText("OU:`n")
				$richtextbox_AD_UsersLeft.appendText("Account expiration:`n")
				$richtextbox_AD_UsersLeft.appendText("Password last set: `n")
				$richtextbox_AD_UsersLeft.appendText("$divider `n")
				$richtextbox_AD_UsersLeft.appendText("Account created: `n")
				$richtextbox_AD_UsersLeft.appendText("Account last modified: `n")
				$richtextbox_AD_UsersLeft.appendText("$divider `n")
				$richtextbox_AD_UsersLeft.appendText("Messaging info:")
				
				$userinfodisplay = $($objecttype | Format-List $space, $space, $formatgivenname, $formatlastname, $formatupn, $formatupn1, $samaccountname, $employeeid, $Title, $blank, $formatmanager, $formatmanagertitle, $blank, $district, $siteid, $ipphone, $mobilephone, $blank, $lockout, $enabled, $UserOU, $accountexpires, $passwordlastset, $blank, $accountcreated, $accountudpated | Out-String).trim()
				
				$richtextbox_Email_ADUser.Text = ""
				$richtextbox_Email_ADUser.AppendText($objecttype.$sip)
				
				$i = 0
				foreach ($smtp in $alias)
				{
					$richtextbox_Email_ADUser.AppendText("`n")
					$richtextbox_Email_ADUser.AppendText($alias[$i])
					$i = $i + 1
				}
				
				$richtextbox_AD_UsersRight.Text = $userinfodisplay
				$groups = $objecttype.memberof -replace ",OU=.*"
				$groups1 = $groups -replace "CN=" | Sort-Object | out-string
				$richtextbox_AD_UsersGroups.Text = "Groups the user is a member of: `n"
				$richtextbox_AD_UsersGroups.AppendText("`n")
				$richtextbox_AD_UsersGroups.AppendText($groups1)
				
			}
		}
		
		#-----------------------------
		## writing to log file
		#-----------------------------
		$objecttypename = $objecttype.name
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Searching for AD Objects, Object searched for is $toolstrip_textbox_User_AD :: results found $objecttypename"
		
		Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Searching for AD Objects"
		
	}
	elseif ($tabcontrol_MS.SelectedTab -eq $tabpage_MS_Exchange)
	{
		$groupbox_Exch_SMTPEdit.Visible = $false
		$groupbox_Exch_Mailbox_output.Visible = $true
		$groupbox_Exch_ActiveSync.Visible = $false
		$groupbox_Exch_Delegation.Visible = $false
		$groupbox_AD_AdvancedSearch.Visible = $false
		$tabcontrol_Exchange.SelectedTab = $tabpage_Exch_Mailboxes
		$splitcontainer_Exch_Users.Visible = $true
		
		if ($objecttype -eq $null)
		{
			$richtextbox_Exch_UsersRight.clear()
			$richtextbox_Exch_UsersDelegation.clear()
			$richtextbox_Exch_SMTPInfo.clear()
			$richtextbox_Exch_UsersLeft.Text = "No results found. Please enter a valid PERNR or [partial] username, displayname, or email."
		}
		elseif ($objecttype.count -gt 1)
		{
			$tabcontrol_Exchange.SelectedTab = $tabpage_Exch_search
			
			$Exch_DT = ConvertTo-DataTable -InputObject $($objecttype | Select-Object ObjectClass, sAMAccountName, Name, Mail, EmployeeID, Title, company, physicalDeliveryOfficeName)
			$Exch_DT.Columns[6].ColumnName = "District"
			$Exch_DT.Columns[7].ColumnName = "Site ID"
			
			Load-DataGridView -DataGridView $datagridview_Exch_Search -Item $Exch_DT
		}

		$richtextbox_Exch_UsersLeft.Text = " `n"
		$richtextbox_Exch_UsersLeft.appendText(" `n")
		$richtextbox_Exch_UsersLeft.appendText("First name: `n")
		$richtextbox_Exch_UsersLeft.appendText("Last Name: `n")
		$richtextbox_Exch_UsersLeft.appendText("Display Name:`n")
		$richtextbox_Exch_UsersLeft.appendText("UPN:`n")
		$richtextbox_Exch_UsersLeft.AppendText("Hidden from GAL: `n")
		$richtextbox_Exch_UsersLeft.appendText("$divider `n")
		$richtextbox_Exch_UsersLeft.AppendText("Custom Attribute 1: `n")
		$richtextbox_Exch_UsersLeft.AppendText("Custom Attribute 11: `n")
		$richtextbox_Exch_UsersLeft.AppendText("Custom Attribute 12: `n")
		$richtextbox_Exch_UsersLeft.AppendText("$divider `n")
		$richtextbox_Exch_UsersLeft.AppendText("SIP address: `n")
		#$richtextbox_Exch_UsersLeft.AppendText("`n")
		$richtextbox_Exch_UsersLeft.AppendText("SMTP addresses: `n")
		
		if ($objecttype.msExchHideFromAddressLists -eq $null)
		{
			$formatGAL = @{ Label = ''; Expression = { "Not Set" } }
		}
		
		#-----------------------------
		# SMTP info
		#-----------------------------
		$alias = @()
		foreach ($proxy in $objecttype.proxyaddresses)
		{
			$alias += $proxy
		}
		
		$i = 0
		$richtextbox_Email_ExchUser.Clear()
		foreach ($smtp in $alias)
		{
			$richtextbox_Email_ExchUser.AppendText($alias[$i])
			$richtextbox_Email_ExchUser.AppendText("`n")
			$i = $i + 1
		}
		
		$richtextbox_Exch_UsersRight.Text = $($objecttype | Format-List $space, $space, $formatgivenname, $formatlastname, $formatupn, $formatupn1, $formatGAL, $blank, $formatCustomAttribute1, $formatCustomAttribute11, $formatCustomAttribute12, $blank, $formatSIP | Out-String).trim()
		
		#-----------------------------
		## writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Search for user info in Exchange"
		
		Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Search for user info in Exchange"
		
	}
	elseif ($tabcontrol_MS.SelectedTab -eq $tabpage_MS_O365)
	{
		
	}
	elseif ($tabcontrol_MS.SelectedTab -eq $tabpage_MS_Azure)
	{
		
	}
	elseif ($tabcontrol_MS.SelectedTab -eq $tabpage_MS_Sharepoint)
	{
		
	}

}


$buttonReenable_Click= {
	#TODO: Place custom script here
	
	$richtextbox_AD_UsersRight.Visible = $false
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
	$textbox_AlternateOU_ADOther = $textbox_AlternateOU_ADOther -replace $replace
	$textbox_AlternateOU_ADOther = $textbox_AlternateOU_ADOther.trim()
	$richtextbox_AD_PC.Text = "Searching......"
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	if ($textbox_AlternateOU_ADOther -eq $null)
	{
		$OUPath = "OU=$textbox_AlternateOU_ADOther, OU=Workstations, OU=kiewit, DC=kiewitplaza, DC=com"
		$OUExists = [adsi]::Exists("LDAP://$OUPath")
		
		If ($OUExists = $true)
		{
			Set-ADComputer $toolstrip_textbox_User_AD -Enabled $true -Description " "
			$sleep
			Get-ADComputer $toolstrip_textbox_User_AD | Move-ADObject -targetpath "OU=$textbox_AlternateOU_ADOther,OU=Workstations,OU=Kiewit,DC=Kiewitplaza,DC=com"
			$SearchForPC = Get-ADComputer $toolstrip_textbox_User_AD -Properties description, canonicalname | Format-list Name, Enabled, description, canonicalname | Out-String
			if ($SearchForPC.enabled -eq $false)
			{
				$richtextbox_AD_PC.Text = $SearchForPC
			}
			else
			{
				$richtextbox_AD_PC.Text = "The Renabling of $toolstrip_textbox_User_AD failed. `n"
				$richtextbox_AD_PC.AppendText("$SearchForPC")
			}
		}
		else
		{
			$richtextbox_AD_PC.Text = "No OU found. Please check the OU name and try again."
		}
	}
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Re-enabling PC, $toolstrip_textbox_User_AD was the value entered :: results $SearchForPC"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Re-enabling PC"
	
}

$button_LoggedOnUser_ADOther_Click={
	#TODO: Place custom script here
	
	$loggedonuser = & "$installpath\bin\PsLoggedon.exe" \\$toolstrip_textbox_User_AD | Out-String
	
	if ($loggedonuser -ne $null)
	{
		$richtextbox_AD_PC.Text = "$loggedonuser"
		#$datagridview_ADOther.Visible = $true
		#Load-DataGridView -DataGridView $datagridview_ADOther -Item $loggedonuser
	}
	else
	{
		$richtextbox_AD_PC.Text = "PC was not found. Please confirm the name and that it is on the network. Also try using the IP address."
	}
	
	#-----------------------------
	# writing to logs
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Searching for logged on user to a PC, entered: $toolstrip_textbox_PCName1 :: logged on: $loggedonuser"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Searching for logged on user to a PC"
}


$button_SearchDistrictLetter_MappedDrives_Click = {
	#TODO: Place custom script here
	
	$datagridview_MapDrives.Visible = $false
	$richtextbox_MappedDrives.Visible = $true
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$richtextbox_MappedDrives.Text = "Searching..."
	
	$districtletter = Is-Numeric $textbox_District_MappedDrives.Text
	$driveletter = Is-Numeric $textbox_DriveLetterUser_MappedDrive.text
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	$datagridview_MapDrives.Visible = $true
	$richtextbox_MappedDrives.Visible = $false
	
	if ($districtletter -eq $false -and $driveletter -eq $false)
	{
		try
		{
			
			$datagridview_MapDrives.Visible = $true
			
			if ($textbox_District_MappedDrives.Text.Length -lt "1" -and $textbox_DriveLetterUser_MappedDrive.Text.Length -lt "1")
			{
				$Drives = Import-Csv "$lib\Drives.csv"
				$DriveDT = ConvertTo-DataTable -InputObject $Drives
				Load-DataGridView -DataGridView $datagridview_MapDrives -Item $DriveDT
			}
			elseif ($textbox_District_MappedDrives.Text.Length -eq "3" -and $textbox_DriveLetterUser_MappedDrive.Text.Length -lt "1")
			{
				$Drives = Import-Csv "$lib\Drives.csv" | Where-Object { $_.District -eq $textbox_District_MappedDrives.Text }
				$DriveDT = ConvertTo-DataTable -InputObject $Drives
				Load-DataGridView -DataGridView $datagridview_MapDrives -Item $DriveDT
			}
			elseif ($textbox_District_MappedDrives.Text.Length -ne "3" -and $textbox_DriveLetterUser_MappedDrive.Text.Length -eq "1")
			{
				$Drives = Import-Csv "$lib\Drives.csv" | Where-Object { $_.Letter -eq $textbox_DriveLetterUser_MappedDrive.Text }
				$DriveDT = ConvertTo-DataTable -InputObject $Drives
				Load-DataGridView -DataGridView $datagridview_MapDrives -Item $DriveDT
			}
			elseif ($textbox_District_MappedDrives.Text.Length -eq "3" -and $textbox_DriveLetterUser_MappedDrive.Text.Length -eq "1")
			{
				$Drives = Import-Csv "$lib\Drives.csv" | Where-Object { $_.Letter -eq $textbox_DriveLetterUser_MappedDrive.Text -and $_.District -eq $textbox_District_MappedDrives.Text }
				$DriveDT = ConvertTo-DataTable -InputObject $Drives
				Load-DataGridView -DataGridView $datagridview_MapDrives -Item $DriveDT
			}
		}
		catch
		{
			$richtextbox_MappedDrives.Visible = $true
			$datagridview_MapDrives.Visible = $false
			$richtextbox_MappedDrives.Text = "Please provide a valid value for District and/or the Drive letter."
		}
	}
	else
	{
		$richtextbox_MappedDrives.Visible = $true
		$datagridview_MapDrives.Visible = $false
		$richtextbox_MappedDrives.Text = "Please provide a non numeric value for District and/or the Drive letter."
	}
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Searched for shared drives in KSS tool, values entered :: Value entered: $textbox_District_MappedDrives $textbox_DriveLetterUser_MappedDrive"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Searched for shared drives in KSS tool"
}

$datagridview_MapDrives_ColumnHeaderMouseClick = [System.Windows.Forms.DataGridViewCellMouseEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	#TODO: Place custom script here
	if ($datagridview_MapDrives.DataSource -is [System.Data.DataTable])
	{
		$column = $datagridview_MapDrives.Columns[$_.ColumnIndex]
		$direction = [System.ComponentModel.ListSortDirection]::Ascending
		
		if ($column.HeaderCell.SortGlyphDirection -eq 'Descending')
		{
			$direction = [System.ComponentModel.ListSortDirection]::Descending
		}
		
		$datagridview_MapDrives.Sort($datagridview_MapDrives.Columns[$_.ColumnIndex], $direction)
	}
}

$button_GroupsUserIsIn_Click={
	#TODO: Place custom script here
	
	$richtextbox_AD_UsersGroups.Visible = $false
	$richtextbox_AD_UsersRight.visible = $false
	 
	#$groupbox_ADUser_ExtendExpiration.Visible = $false
	
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD.trim()
	$richtextbox_AD_UsersLeft.Visible = $true
	$richtextbox_AD_UsersRight.Visible = $false
	
	$groups = (Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD } | Get-ADPrincipalGroupMembership).name | Sort-Object | Out-String
	$richtextbox_AD_UsersLeft.Text = $groups
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Looking up Groups user is in, User searched: $toolstrip_textbox_User_AD :: results $groups"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Looking up Groups user is in,"
}

$toolstripbutton_PCInfo_AD_Click={
	#TODO: Place custom script here
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD.trim()
	$toolstrip_textbox_User_AD.Text = "Searching....."
	$sleep
	
	#-----------------------------
	# running search with cleaned up variables
	#-----------------------------
	$pcinfo = Get-ADcomputer $toolstrip_textbox_User_AD -Properties name, canonicalname, operatingsystem, description | Format-List name, canonicalname, operatingsystem, description | Out-String
	$lapsinfo = get-lapspassword $toolstrip_textbox_User_AD | Out-String
	$richtextbox_AD_PC.Text = "$pcinfo"
	$richtextbox_AD_PC.AppendText($lapsinfo)
	
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Getting info for a PC from AD, Device searched: $toolstrip_textbox_User_AD"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Getting info for a PC from AD"
}

$button_ValidateADAccountOldOwner_ChangeOwnerOfGroups_Click={
	#TODO: Place custom script here
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$groupbox_ADGroups.Visible = $true
	#$richtextbox_ADGroups_Right.Visible = $false
	#$richtextbox_ADGroups_GroupsMember.Visible = $false
	
	$splitcontainer_AD_Group.Visible = $false
	$splitcontainer_AD_Group.Panel1.Visible = $false
	$splitcontainer_AD_Group.Panel2.Visible = $false
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$textbox_OldOwner_ChangeOwnerADGroup = $textbox_OldOwner_ChangeOwnerADGroup -replace "System.Windows.Forms.TextBox, Text: "
	$textbox_OldOwner_ChangeOwnerADGroup = $textbox_OldOwner_ChangeOwnerADGroup.trim()
	$richtextbox_AD_GroupsOutput.Text = "Processing......"
	$sleep
	
	#-----------------------------
	# running script with new adjusted variables
	#-----------------------------
	
	$validateADUser = Get-ADUser $textbox_OldOwner_ChangeOwnerADGroup
	if ($validateADUser -ne $Null)
	{
		$richtextbox_AD_GroupsOutput.Text = $textbox_OldOwner_ChangeOwnerADGroup
		$richtextbox_AD_GroupsOutput.AppendText(" does exist.")
		
		#-----------------------------
		## writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Validate AD User script from Change Owner of AD groups tab, $textbox_OldOwner_ChangeOwnerADGroup does exist"
	}
	else
	{
		$richtextbox_AD_GroupsOutput.Text = ""
		$richtextbox_AD_GroupsOutput.AppendText("No account found. Please check spelling.")
		
		#-----------------------------
		# writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running Validate AD User script from Change Owner of AD groups tab, No account found :: $textManager2Lookup was the value entered"
	}
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Validating new owner account for Group ownership swap"
}

$toolstripbutton_GeneratePassword_ADUsers_Click={
	#TODO: Place custom script here
	Unlock-ADAccount test.ps -Verbose
	$Error.clear()
	
	#-----------------------------
	# generating new password
	#-----------------------------
	$i = 0

	do
	{
		Unlock-ADAccount test.ps -Verbose
		
		$special_characters = @('!', '@', '$', '#', '%', '&')
		$special_character = get-random $special_characters
		
		#-----------------------------
		# generating new password
		#-----------------------------
		$random1 = Get-Content $dictionary | Get-Random
		$newphrase = get-password $random1
		
		Write-Host "**************************************************"
		Write-Host $newphrase
		Write-Host "current count: " $i
		
		##get AD credentials and test if they are valid
		$username = "test.ps"
		
		try
		{
			Write-Host "**************************************************"
			Write-Host $newphrase
			Write-Host $(ConvertTo-SecureString -AsPlainText $newphrase -Force)
			Write-Host "**************************************************"
			get-aduser $username | Set-ADAccountPassword -Reset -NewPassword (ConvertTo-SecureString -AsPlainText $newphrase -Force) -Verbose
		}
		catch
		{
			#write-host "failure!!"
			
			$richtextbox_AD_UsersLeft.Text = $error.exception.message
			$richtextbox_AD_UsersRight.Clear()
			$richtextbox_AD_UsersGroups.Clear()
			$richtextbox_Email_ADUser.Clear()
		}
		
		##function to be able to test AD credentials
		Add-Type -AssemblyName System.DirectoryServices.AccountManagement
		
		$ct = [System.DirectoryServices.AccountManagement.ContextType]::Domain
		$pc = New-Object System.DirectoryServices.AccountManagement.PrincipalContext($ct, $Domain_com)
		
		$Valid = @{
			IsValid    = $pc.ValidateCredentials($username, $newphrase).ToString()
		}
		$ValidTest = (New-Object PSObject -Property $Valid)
		$i = $i + 1
		
		Write-Host $ValidTest
		Write-Host $ValidTest.isvalid
		
		if ($ValidTest.isvalid -eq $true)
		{
			break
		}
		
		if ($i -gt "10")
		{
			break
		}
	}
	while (($ValidTest.isvalid -eq $false) -or ($i -lt "10"))
	
	
	#-----------------------------
	# displaying new password
	#-----------------------------
	if ($i -ge "10")
	{
		$richtextbox_AD_UsersRight.Clear()
		$richtextbox_Email_ADUser.Clear()
		$richtextbox_AD_UsersGroups.Clear()
		$richtextbox_AD_UsersLeft.Text = "Failed to generate password `n"
		$richtextbox_AD_UsersLeft.AppendText("10 attempts made`n")
		$richtextbox_AD_UsersLeft.AppendText("Please try again")
	}
	else
	{
		$toolstriptextbox_Password_ADUser.Text = $newphrase
	}
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Generating new password from dictionary for User"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Generating new password from dictionary for User"
}

$generatePassPhraseToolStripMenuItem_Click = {
	#TODO: Place custom script here
	
	do
	{
		#-----------------------------
		# generating new password
		#-----------------------------
		$random1 = Get-Content $adj | Get-Random
		$random1 = $random1.substring(0, 1).toupper() + $random1.substring(1).tolower()
		
		$random2 = Get-Content $noun | Get-Random
		$random2 = $random2.substring(0, 1).toupper() + $random2.substring(1).tolower()
		
		$random3 = Get-Content $adj | Get-Random
		$random3 = $random3.substring(0, 1).toupper() + $random3.substring(1).tolower()
		
		$random4 = Get-Content $adj | Get-Random
		$random4 = $random4.substring(0, 1).toupper() + $random4.substring(1).tolower()
		
		$passphrase_start = ($a = "The", "Is") | get-random
		
		if ($passphrase_start -eq "The")
		{
			$newPassword = $passphrase_start + $random1 + $random2 + "Is" + $random3
		}
		else
		{
			$newPassword = $passphrase_start + "The" + $random2 + "Very" + $random1
		}
		
		if ($newPassword.length -lt "16")
		{
			$random4 = Get-Content "\\Khonemdcnas01\kss_team\Apps\Powershell Tools\KSS MultiTool\lib\firstword.txt" | Get-Random
			$newPassword = $newPassword + "And" + $random4
		}
		
		$special_characters = @('!', '@', '$', '#', '%', '&')
		$special_character = get-random $special_characters
		
		$newPassword = $newPassword + $special_character
		
		##function to be able to test AD credentials
		Add-Type -AssemblyName System.DirectoryServices.AccountManagement
		
		$ct = [System.DirectoryServices.AccountManagement.ContextType]::Domain
		$pc = New-Object System.DirectoryServices.AccountManagement.PrincipalContext($ct, $domain)
		
		$Valid = @{
			IsValid   = $pc.ValidateCredentials($username, $newPassword).ToString()
		}
		$ValidTest = (New-Object PSObject -Property $Valid)
		
	}
	while ($ValidTest.isvalid.text -eq $false)
	
	#-----------------------------
	# displaying new password
	#-----------------------------
	$toolstriptextbox_Password_ADUser.Text = $newPassword
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Generating new password from dictionary for User"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Generating new password from dictionary for User"
}

$toolstripbutton_ApplyPassword_ADUser_Click={
	#TODO: Place custom script here
	$splitcontainer_AD_User.Visible = $false
	$richtextbox_AD_UsersRight.Visible = $false
	$richtextbox_AD_UsersGroups.Visible = $false
	$groupbox_AD_BulkPW.Visible = $false
	$richtextbox_AD_UsersLeft.Visible = $true
	$datagridview_AD_DirectReports.Visible = $false
	
	#-----------------------------
	# cleaning up and setting the variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace "System.Windows.Forms.ToolStrip, Name: toolstrip_ADUser, Items: 7"
	#$pwlastsetold = Get-ADUser -Identity $toolstrip_textbox_User_AD -Properties passwordlastset | Format-Table passwordlastset -HideTableHeaders | Out-String
	
	#-----------------------------
	# applying password to PDC
	#-----------------------------
	try
	{
		Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD -or employeeid -like $toolstrip_textbox_User_AD } | Set-ADAccountPassword -reset -NewPassword (ConvertTo-SecureString -AsPlainText $toolstriptextbox_Password_ADUser.Text -Force)
		#$pwlastsetnew = Get-ADUser -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD -or employeeid -like $toolstrip_textbox_User_AD } -Properties passwordlastset -ErrorVariable Passworderror | Format-Table passwordlastset -HideTableHeaders | Out-String	
		$richtextbox_AD_UsersLeft.Text = "Password updated successfuly `n"
	}
	catch
	{
		$richtextbox_AD_UsersLeft.Text = "Update failed. Please use ADUC to udpate. `n"
		$richtextbox_AD_UsersLeft.AppendText("$Error.Exception.Message `n")
	}
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Applying new password for User"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Applying new password for User"
}

$toolstripbutton_GeneratePasswordSpecial_ADUsers_Click={
	#TODO: Place custom script here
	
	$richtextbox_AD_UsersRight.Visible = $false
	$richtextbox_AD_UsersLeft.Clear()
	 
	$richtextbox_AD_UsersLeft.Clear()
	
	#-----------------------------
	# cleaning up the variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace "System.Windows.Forms.ToolStrip, Name: toolstrip_ADUser, Items: 7"
	$toolstrip_textbox_User_AD.trim()
	
	#-----------------------------
	# generating new password with given info, producing an 8 character password if any invalid info
	#-----------------------------
	do
	{
		$password = New-SWRandomPassword -PasswordLength 32 -InputStrings $specialyes
		
		$username = "test.ps"
		##function to be able to test AD credentials
		Add-Type -AssemblyName System.DirectoryServices.AccountManagement
		
		$ct = [System.DirectoryServices.AccountManagement.ContextType]::Domain
		$pc = New-Object System.DirectoryServices.AccountManagement.PrincipalContext($ct, $domain_com)
		
		$Valid = @{
			IsValid   = $pc.ValidateCredentials($username, $newphrase).ToString()
		}
		$ValidTest = (New-Object PSObject -Property $Valid)
	}
	while ($ValidTest.isvalid.text -eq $false)
	
	$toolstriptextbox_Password_ADUser.Text = $password

	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$(Get-Date).tostring("MM-dd-yyy") $(get-date -UFormat %R), $userName, $pcname, Generating new complex password for User"
	
	Log-Write -LogPath $logusagefile -LineVal "$(Get-Date).tostring("MM-dd-yyyy") $(get-date -UFormat %R), $userName, $pcname, Generating new complex password for User"
}

$datagridview_Printers_ColumnHeaderMouseClick = [System.Windows.Forms.DataGridViewCellMouseEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	#TODO: Place custom script here
	if ($datagridview_MapDrives.DataSource -is [System.Data.DataTable])
	{
		$column = $datagridview_MapDrives.Columns[$_.ColumnIndex]
		$direction = [System.ComponentModel.ListSortDirection]::Ascending
		
		if ($column.HeaderCell.SortGlyphDirection -eq 'Descending')
		{
			$direction = [System.ComponentModel.ListSortDirection]::Descending
		}
		
		$datagridview_MapDrives.Sort($datagridview_MapDrives.Columns[$_.ColumnIndex], $direction)
	}
}

$linklabel_IDMManagementTool_Links_CommonWebSites_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.LinkLabelLinkClickedEventArgs]
	#TODO: Place custom script here
	Start-Process "https://kwt-imopl01.kiewit.com:50001/idm"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching IDM web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching IDM web interface"
	
}

$complexPasswordToolStripMenuItem_Click={
	#TODO: Place custom script here
	
	$richtextbox_AD_UsersRight.Visible = $false
	$richtextbox_AD_UsersLeft.Clear()
	
	#-----------------------------
	# generating new password 
	#-----------------------------
	do
	{
		$special_characters = @('!', '@', '$', '#', '%', '&')
		$special_character = get-random $special_characters
		
		#-----------------------------
		# generating new password
		#-----------------------------
		$random1 = Get-Content $dictionary | Get-Random
		$password = get-passphrase
		
		
		##get AD credentials and test if they are valid
		$domain = "kiewitplaza.com"
		$username = "test.ps"
		
		
		##function to be able to test AD credentials
		Add-Type -AssemblyName System.DirectoryServices.AccountManagement
		
		$ct = [System.DirectoryServices.AccountManagement.ContextType]::Domain
		$pc = New-Object System.DirectoryServices.AccountManagement.PrincipalContext($ct, $domain)
		
		$Valid = @{
			IsValid   = $pc.ValidateCredentials($username, $password).ToString()
		}
		$ValidTest = (New-Object PSObject -Property $Valid)
		
	}
	while ($ValidTest.isvalid.text -eq $false)
	
	$toolstriptextbox_Password_ADUser.Text = $password

	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Generating new Complex password for User under"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Generating new Complex password for User under"
}


$tabpage_Top_Finesse_Enter={
	#TODO: Place custom script here
	
	$webbrowser1 = New-Object 'System.Windows.Forms.WebBrowser'
	$webbrowser1.navigate("https://khonemdcucx01.kiewitplaza.com:8445/desktop/container/?locale=en_US")
}

$toolstrip_textbox_PCName_AD_KeyDown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$toolstripbutton_PCInfo_AD.PerformClick()
	}
}


$textbox_District_MappedDrives_keydown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$button_SearchDistrictLetter_MappedDrives.PerformClick()
	}
}

$textbox_DriveLetterUser_MappedDrive_keydown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$button_SearchDistrictLetter_MappedDrives.PerformClick()
	}
}

$textbox_NTFSPermissions_keydown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$button_GetNTFSPermissions.PerformClick()
	}
}

$text_CustomScript_keydown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$button_RunCustomScript.PerformClick()
	}
}

$textbox_LogFileToReview_keydown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$button_ReviewInGUI.PerformClick()
	}
}

$textbox_WhichBugReport_BugReports_keydown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$button_ReviewInGUI_BugReports.PerformClick()
	}
}

$buttonReloadReadmeFile_Click={
	#TODO: Place custom script here
	
	$readme = (Get-Content $lib\readme.txt) -join "`n"
	
	$richtextbox_ReadMe.Text = $readme
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Updating Read Me file"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Updating Read Me file"
}

$button_CitrixDirector_Click={
	#TODO: Place custom script here
	
	Start-Process "http://khonesdc75ddc01/Director/LogOn.aspx?ReturnUrl=%2fdirector%2f"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Citrix Director"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Citrix Director"
}

$button_ExchangeManagement_Click={
	#TODO: Place custom script here
	
	Start-Process "https://mail.o365.kiewit.com/ecp/"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching exchange management web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching exchange management web interface"
}

$toolstripbutton1_Click={
	#TODO: Place custom script here
	
	#copy-item $lib\BulkGroupAdd.csv $fileoutput -force
	#invoke-item $fileoutput\BulkGroupAdd.csv
	
	$groupbox_ADGroups.Visible = $false
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$datagridview_ADGroupMember.Visible = $false
	$groupbox_ADGroups_MassChange.Visible = $true
}

$toolstripbutton_RemoveUserFromGroup_Click={
	#TODO: Place custom script here
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$groupbox_ADGroups.Visible = $true
	$splitcontainer_AD_Group.Visible = $false
	$splitcontainer_AD_Group.Panel1.Visible = $false
	$splitcontainer_AD_Group.Panel2.Visible = $false
	
	$fileoutputexists = Test-Path $fileoutput
	
	if ($fileoutputexists -eq $true)
	{
		#-----------------------------
		# cleaning up variables
		#-----------------------------
		$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
		$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
		
		
		Remove-Item $bulkADGroup -Force
		
		$name = "Name"
		$name | Out-File $bulkADGroup -Force
		$richtextbox_ADGroups_MassChange.Text | Out-File $bulkADGroup -Append -Force
		
		$users = import-csv $bulkADGroup
		
		$notingroup = New-Object System.Collections.ArrayList
		$removedfromgroup = New-Object System.Collections.ArrayList
		$userfail2remove = New-Object System.Collections.ArrayList
		#$userfail2remove = $users.user
		
		#-----------------------------
		# removing users
		#-----------------------------
		foreach ($user in $users.name)
		{
			
			try
			{
				if ((Get-ADUser $User -Properties memberof).memberof -like $toolstrip_textbox_User_AD)
				{
					$notingroup += $User
				}
				else
				{
					get-adgroup -identity $toolstrip_textbox_User_AD | Remove-ADGroupMember -members $User -Confirm:$false
					$removedfromgroup += $user
					#$userfail2remove.remove($user)
				}
			}
			catch
			{
				$userfail2remove += $user
			}
			
		}
		
		Remove-Item $bulkADGroup -Force
		
		$groupbox_ADGroups.Visible = $false
		$groupbox_ADGroups_MassChange.Visible = $true
		
		$richtextbox_ADGroups_MassChange.Text = "Users removed: `n"
		$richtextbox_ADGroups_MassChange.AppendText("$removedfromgroup `n")
		$richtextbox_ADGroups_MassChange.AppendText(" `n")
		$richtextbox_ADGroups_MassChange.AppendText("Users not in group: `n")
		$richtextbox_ADGroups_MassChange.AppendText("$notingroup `n")
		$richtextbox_ADGroups_MassChange.AppendText(" `n")
		$richtextbox_ADGroups_MassChange.AppendText("failed to remove: `n")
		$richtextbox_ADGroups_MassChange.AppendText("$userfail2remove")
		
		
		#-----------------------------
		# writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Removing people from AD Group, Group name: $toolstrip_textbox_User_ADOthers :: Users: $users"
		
		Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Removing people from AD Group"
	}
	else
	{
		$richtextbox_AD_GroupsOutput.Text = "Please fill out the Excel form to have names to process."
	}
}

$toolstripbutton_AddUser2Group_Click={
	#TODO: Place custom script here
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$groupbox_ADGroups.Visible = $true
	$splitcontainer_AD_Group.Visible = $false
	$splitcontainer_AD_Group.Panel1.Visible = $false
	$splitcontainer_AD_Group.Panel2.Visible = $false
	
	#$richtextbox_ADGroups_Right.Visible = $false
	#$richtextbox_ADGroups_GroupsMember.Visible = $false
	$richtextbox_AD_GroupsOutput.Visible = $true
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
	
	$richtextbox_AD_GroupsOutput.Text = "Processing... `n"
	
	$name = "Name"
	$name | Out-File $bulkADGroup -Force
	$richtextbox_ADGroups_MassChange.Text | Out-File $bulkADGroup -Append -Force
	
	$users = import-csv $bulkADGroup
	$alreadyingroup = New-Object System.Collections.ArrayList
	$addedtogroup = New-Object System.Collections.ArrayList
	$userfail2add = New-Object System.Collections.ArrayList
	
	#-----------------------------
	# adding users
	#-----------------------------
	foreach ($user in $users.name)
	{
		try
		{
			if ((Get-ADUser $user.trim() -Properties memberof).memberof -like $toolstrip_textbox_User_AD)
			{
				$alreadyingroup += $user
			}
			else
			{
				Add-ADGroupMember -identity $toolstrip_textbox_User_AD -members $user 
				$addedtogroup += $user
				
			}
		}
		catch
		{
			$userfail2add += $user
		}
		
	}
	
	Remove-Item $bulkADGroup -Force
	
	$addedtogrouplist = $addedtogroup | Format-List | Out-String
	$alreadyingrouplist = $alreadyingroup | Format-List | Out-String
	$userfail2addlist = $userfail2add | Format-List | Out-String
	
	$groupbox_ADGroups.Visible = $false
	$groupbox_ADGroups_MassChange.Visible = $true
	
	$richtextbox_ADGroups_MassChange.Text = "Users added: `n"
	$richtextbox_ADGroups_MassChange.AppendText("$addedtogrouplist `n")
	$richtextbox_ADGroups_MassChange.AppendText(" `n")
	$richtextbox_ADGroups_MassChange.AppendText("Users already in group: `n")
	$richtextbox_ADGroups_MassChange.AppendText("$alreadyingrouplist `n")
	$richtextbox_ADGroups_MassChange.AppendText(" `n")
	$richtextbox_ADGroups_MassChange.AppendText("failed to add: `n")
	$richtextbox_ADGroups_MassChange.AppendText($userfail2addlist) 
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Adding people to AD Group, Group name: $toolstrip_textbox_User_ADOthers :: Users: $users"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Adding people to AD Group"
	
}

$buttonDutyListForTheDay_Click={
	#TODO: Place custom script here
	Start-Process "\\Khonemdcnas01\kss_team\Apps\Powershell Tools\Josh Dev stuff\GUI\Duty Sheet - KMT\KSS Duty List.exe"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launched Duty List"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launched Duty List"
}

$button_UserLastLogonAD_Click={
	#TODO: Place custom script here
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.replace(' ', '.')
	$sleep
	
	start-process "$installpath\bin\lastlogon.exe"
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Checking last log on of user via external app"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Checking last log on of user"
	
}

$textbox_NewGroup_Manager_Leave={
	#TODO: Place custom script here
	
	$textbox_NewGroup_Manager = $textbox_NewGroup_Manager -replace $replace
	$textbox_NewGroup_Manager = $textbox_NewGroup_Manager.trim()
	
	$NewGroupManager = Get-ADUser $textbox_NewGroup_Manager
	
	if ($NewGroupManager -eq $null ) {
		[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
		
		[Windows.Forms.MessageBox]::Show("That manager's name does not exist. Please check the name and try again.", "Manager name check", [Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Information)
	}
	
}

$textbox_NewGroup_Email_Leave = {
	#TODO: Place custom script here
	
	#-----------------------------
	#  clean up variables
	#-----------------------------
	$textbox_NewGroup_Email = $textbox_NewGroup_Email -replace $replace
	$textbox_NewGroup_Email = $textbox_NewGroup_Email.trim()
	
	
	#-----------------------------
	#  check if email is in AD already
	#-----------------------------
	$a = Get-ADUser -filter { mail -like $textbox_NewGroup_Email }
	
	if ($a -ne $null) {
		[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
		
		[Windows.Forms.MessageBox]::Show("That email address exists in AD. Please enter an address that is not in use.", "Email format check", [Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Information)
	}
	
	$a = Validate-Email $textbox_NewGroup_Email
	
	
	#-----------------------------
	#  validate email formatting
	#-----------------------------
	if ($a -eq $false -or $textbox_NewGroup_Email -notmatch ".com")
	{
		[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
		
		[Windows.Forms.MessageBox]::Show("That email address is not formatted properly.", "Email format check", [Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Information)
	}
}

$textbox_NewGroup_District_Leave = {
	#TODO: Place custom script here
	
	$textbox_NewGroup_District = $textbox_NewGroup_District -replace $replace
	$textbox_NewGroup_District = $textbox_NewGroup_District.trim()
	
	if ($textbox_NewGroup_District.length -ne "3") {
		[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
		
		[Windows.Forms.MessageBox]::Show("That is not a 3 character District Code. Please re-enter.", "District 3 character code format check", [Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Information)
	}
}

$buttonPing_Click={
	#TODO: Place custom script here
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD.trim()
	$richtextbox_AD_PC.Text = "Searching....."
	$sleep
	
	#-----------------------------
	# getting IP and Pinging
	#-----------------------------
	$ip = Get-ADComputer $toolstrip_textbox_User_AD -Properties ipv4Address | Select-Object ipv4Address
	$ip = $ip.ipv4Address
	$richtextbox_AD_PC.Text = "IP address of $toolstrip_textbox_User_AD :: $ip `n"
	$richtextbox_AD_PC.AppendText("`n")
	$ping = & ping $toolstrip_textbox_User_AD | Format-Table -AutoSize | out-string
	$richtextbox_AD_PC.AppendText("$ping")
	
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Pinging a PC, IP address of $toolstrip_textbox_User_AD :: $ip"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Pinging a PC"
}

$toolstripbuttonPCInfoComplete_Click={
	#TODO: Place custom script here
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_PCName_AD = $toolstrip_textbox_PCName_AD -replace $replace
	$toolstrip_textbox_PCName_AD.trim()
	$richtextbox_AD_PC.Text = "Searching....."
	$sleep
	
	#-----------------------------
	# running search with cleaned up variables
	#-----------------------------
	$boottime = Get-WmiObject -ClassName win32_operatingsystem -computer $toolstrip_textbox_PCName_AD | select lastbootuptime
	$lastbootuptime = [Management.ManagementDateTimeConverter]::ToDateTime($boottime.LastBootUpTime)
	
	$LBTime = [Management.ManagementDateTimeConverter]::ToDateTime($boottime.LastBootUpTime)
	[TimeSpan]$uptime = New-TimeSpan $LBTime $(get-date)
	$label_UptimeStatus = "$($uptime.days) Days $($uptime.hours) Hours $($uptime.minutes) Minutes $($uptime.seconds) Seconds"
	
	$cpuinfo = Get-Processor $toolstrip_textbox_PCName_AD | Format-List| Out-String
	
	#-----------------------------
	# displaying results
	#-----------------------------
	$richtextbox_AD_PC.Text = "Last Boot Time: $lastbootuptime `n"
	$richtextbox_AD_PC.AppendText("Uptime: $label_UptimeStatus `n")
	$richtextbox_AD_PC.AppendText("`n")
	$richtextbox_AD_PC.AppendText("`n")
	$richtextbox_AD_PC.AppendText("`n")
	$richtextbox_AD_PC.AppendText("CPU Info:")
	$richtextbox_AD_PC.AppendText("$cpuinfo `n")
	
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Looking up info about a PC from network resources, Last Boot Time: $lastbootuptime :: Uptime: $label_UptimeStatus :: $cpuinfo"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Looking up info about a PC from network resources"
}

$button_RecoverADObject_Click={
	#TODO: Place custom script here
	
	Start-Process "http://scorchdev/"
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching web interface for recovering deleted PC from AD"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching web interface for recovering deleted PC from AD"
	
}

$buttonLaunchDHCPAndDNS_Click={
	#TODO: Place custom script here
	
	Start-Process "C:\WINDOWS\system32\dhcpmgmt.msc"
	Start-Process "C:\Windows\System32\dnsmgmt.msc"
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching DHCP and DNS consoles"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching DHCP and DNS consoles"
}

$buttonPowershellISE_Click={
	#TODO: Place custom script here
	
	Start-Process "C:\WINDOWS\system32\WindowsPowerShell\v1.0\powershell_ise.exe"
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Powershell ISE"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Powershell ISE"
}

$buttonLaunchLazyWinAdmin_Click={
	#TODO: Place custom script here
	Start-Process "\\khonemdcnas01\kss_team\Apps\Powershell Tools\Josh Dev stuff\GUI\LazyWinAdmin\LazyWinAdmin.exe"

	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching LazyWinAdmin"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching LazyWinAdmin"
}

$toolstrip_textbox_User_AD_KeyDown = [System.Windows.Forms.KeyEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$toolstripbutton_GetInfo_ADUser.PerformClick()
	}
}

$toolstripbutton_Clear_ADobjectSearchBox_Click={
	#TODO: Place custom script here
	
	$toolstrip_textbox_User_AD.Clear()
	 
	$richtextbox_AD_UsersLeft.Clear()
	$richtextbox_AD_UsersRight.Clear()
	$richtextbox_AD_UsersGroups.clear()
	
}

$tabpage_Groups_Enter={
	#TODO: Place custom script here
	 
	$richtextbox_AD_UsersLeft.Clear()
}

$textbox_ADUser_Logon_SAMAccountNameOfUser_TextChanged={
	#TODO: Place custom script here
	$button_ADUser_Logon_Apply.Visible = $true
}

$textbox_ADUser_UPNofUser_TextChanged={
	#TODO: Place custom script here
	$button_ADUser_Logon_Apply.Visible = $true
}

$textbox_ADUser_StreetAddress_TextChanged={
	#TODO: Place custom script here
	
	$button_ADUserUpdate_Apply.Visible = $true
}

$textbox_ADUser_City_TextChanged={
	#TODO: Place custom script here
	
	$button_ADUserUpdate_Apply.Visible = $true
}

$textbox_ADUser_ZipCode_TextChanged={
	#TODO: Place custom script here
	
	$button_ADUserUpdate_Apply.Visible = $true
}

$combobox_ADUser_State_TextChanged={
	#TODO: Place custom script here
	
	$button_ADUserUpdate_Apply.Visible = $true
}

$radiobutton_ExtendFor60Days_CheckedChanged={
	#TODO: Place custom script here
	
	$button_ExtendExpiration_Apply.Visible = $true
}

$radiobutton_ExtendFor6Months_CheckedChanged={
	#TODO: Place custom script here
	
	$button_ExtendExpiration_Apply.Visible = $true
}

$radiobutton_ExtendFor1Year_CheckedChanged={
	#TODO: Place custom script here
	
	$button_ExtendExpiration_Apply.Visible = $true
}

$datagridview_ADObjectSearch_CellMouseDoubleClick=[System.Windows.Forms.DataGridViewCellMouseEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	#TODO: Place custom script here
	
	$toolstrip_textbox_User_AD.Text = $datagridview_ADObjectSearch.SelectedCells[0].FormattedValue
	
	$toolstripbutton_GetInfo_ADUser.PerformClick()
}

$textbox1_TextChanged={
	#TODO: Place custom script here
	$button_ADUser_AddUserToGroup_Add.Visible = $true
	$button_ADUser_AddUserToGroup_Remove.Visible = $true
}

$button_FSRefresh_Click={
	#TODO: Place custom script here
	
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD -replace $replace
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.trim()
	$toolstrip_textbox_User_AD = $toolstrip_textbox_User_AD.replace(' ', '.')
	
	#-----------------------------
	# running with cleaned up variables
	#-----------------------------
	if (($toolstrip_textbox_User_AD -gt "0") -and ($toolstrip_textbox_User_AD -lt "999999") -and ($PERNR -eq $true))
	{
		$objecttype = Get-ADUser -filter { employeeid -like $toolstrip_textbox_User_AD -and name -notlike "*admin" } -Properties extensionAttribute12, CanonicalName, objectclass, givenname, sn, displayname, title, manager, employeeID, company, mail, ipphone, mobile, physicalDeliveryOfficeName, lockoutTime, enabled, accountExpirationdate, directreports, whenCreated, whenChanged, memberof, samaccountname, manager, passwordlastset, accountExpirationdate, enabled, proxyaddresses, msRTCSIP-PrimaryUserAddress
	}
	else
	{
		$objecttype = Get-ADobject -filter { samaccountname -like $toolstrip_textbox_User_AD -or displayname -like $toolstrip_textbox_User_AD -or mail -like $toolstrip_textbox_User_AD } -Properties extensionAttribute12, CanonicalName, objectclass, givenname, sn, displayname, title, manager, employeeID, company, mail, ipphone, mobile, physicalDeliveryOfficeName, lockoutTime, directreports, whenCreated, whenChanged, memberof, samaccountname, manager, managedby, description, proxyaddresses, msRTCSIP-PrimaryUserAddress
		#$formatting = $true
	}
	
	$groups = $objecttype.memberof -replace ",OU=.*"
	$groups1 = $groups -replace "CN=" | Sort-Object | out-string
	$richtextbox_ADUser_AddUserToGroup_MemberOf.Text = "Groups the user is a member of: `n"
	$richtextbox_ADUser_AddUserToGroup_MemberOf.AppendText("`n")
	$richtextbox_ADUser_AddUserToGroup_MemberOf.AppendText($groups1)
	
	$richtextbox_ADUser_AddUserToGroup_Output.Text = "Group membership list updated"
	
}

$textbox_ADUser_Description_TextChanged={
	#TODO: Place custom script here
	$button_ADUser_UpdateNotesDescription.Visible = $true
}

$textbox_ADUser_Notes_TextChanged={
	#TODO: Place custom script here
	$button_ADUser_UpdateNotesDescription.Visible = $true
}

$button_ADUser_UpdateNotesDescription_Click={
	#TODO: Place custom script here
	
	Set-ADUser $textbox_ADUser_Description_ADObject.text -Replace @{ info = $textbox_ADUser_Notes.text ; description = $textbox_ADUser_Description.text }
	
	$diditwork = get-aduser $textbox_ADUser_Description_ADObject.text -Properties description, info
	$richtextbox_ADUser_Description_Output.Text = "Updated to: `n"
	$richtextbox_ADUser_Description_Output.AppendText("Description: `n")
	$richtextbox_ADUser_Description_Output.AppendText($diditwork.description)
	$richtextbox_ADUser_Description_Output.AppendText(" `n")
	$richtextbox_ADUser_Description_Output.AppendText(" `n")
	$richtextbox_ADUser_Description_Output.AppendText("Notes: `n")
	$richtextbox_ADUser_Description_Output.AppendText($diditwork.info)
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Updating Notes and Description on AD user, User $textbox_ADUser_Description_ADObject"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Updating Notes and Description on AD user"
}

$toolstripbutton5_Click={
	#TODO: Place custom script here
	#-----------------------------
	# cleaning up variables
	#-----------------------------
	$toolstrip_textbox_PCName_AD = $toolstrip_textbox_PCName_AD -replace $replace
	$toolstrip_textbox_PCName_AD.trim()
	$richtextbox_AD_PC.Text = "Resetting and then looking up new password............."
	$sleep
	
	#-----------------------------
	# running search with cleaned up variables
	#-----------------------------
	reset-AdmPwdPassword $toolstrip_textbox_PCName_AD –WhenEffective $datetime.adddays(30)
	sleep -s 10
	$lapsinfo = get-lapspassword $toolstrip_textbox_PCName_AD | Out-String
	$richtextbox_AD_PC.Text = $lapsinfo
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Resetting LAPS Info, PC entered is $toolstrip_textbox_PCName_AD"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Resetting LAPS Info"
}

$button_TransferApp2PC_Click={
	#TODO: Place custom script here
	$folder = Get-ChildItem "\\khonemdcnas01\KSS_Team\Zipped_Installers\" -Recurse -filter $combobox_TransferApp2PC.SelectedItem | Select-Object Directory
	
	$ctemp = "\\" + $toolstrip_textbox_User_AD.Text + "\c$\temp\"
	$tempexists = test-path $ctemp
	
	if ($tempexists -eq $true)
	{
		$output = "robocopy '" + $folder.directory + "\' \\" + $ctemp + "\" + $combobox_TransferApp2PC.SelectedItem + " /V"
		$output | Out-File $customscript
		Start-Process "powershell.exe" $customscript
	}
	else
	{
		$wshell = New-Object -ComObject Wscript.Shell
		
		$wshell.Popup("C:\Temp does not exist, please create on user's PC.", 0, "Done", 0x1)
	}
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$toolstrip_textbox_User_ADText = $toolstrip_textbox_User_AD.Text
	$combobox_TransferApp2PCSelectedItem = $combobox_TransferApp2PC.SelectedItem
	
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Copying $combobox_TransferApp2PCSelectedItem to $toolstrip_textbox_User_ADText\c\Temp\"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Copying app to C:\Temp on user's PC"
}

$aDAdminCenterToolStripMenuItem_Click={
	#TODO: Place custom script here
	start-process "C:\Windows\system32\dsac.exe" -WorkingDirectory "C:\Windows\system32\"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching AD Administrative center"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching AD Administrative center"
}

$aDUsersComputersToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "C:\Windows\system32\dsa.msc" -WorkingDirectory "C:\Windows\system32"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching ADUC"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching ADUC"
}

$commandLineToolStripMenuItem_Click={
	#TODO: Place custom script here
	start-process "c:\windows\system32\cmd.exe"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching CLI"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching CLI"
}

$dHCPToolStripMenuItem_Click={
	#TODO: Place custom script here
	start-process "C:\WINDOWS\system32\dhcpmgmt.msc" -WorkingDirectory "C:\WINDOWS\system32\"
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Launching DHCP console"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching DHCP console"
}

$dNSToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "C:\Windows\System32\dnsmgmt.msc"
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Launching DNS console"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching DHCP console"
}

$lockoutStatusToolToolStripMenuItem_Click={
	#TODO: Place custom script here
	start-process "C:\Program Files (x86)\Windows Resource Kits\Tools\lockoutstatus.exe" -WorkingDirectory "C:\Program Files (x86)\Windows Resource Kits\Tools\"
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Lockout status tool"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Lockout status tool"
}

$powershellToolStripMenuItem_Click={
	#TODO: Place custom script here
	start-process powershell
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching powershell"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching powershell"
}

$powershellISEToolStripMenuItem_Click={
	#TODO: Place custom script here
	start-process "C:\WINDOWS\system32\WindowsPowerShell\v1.0\powershell_ise.exe" 
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Powershell ISE"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Powershell ISE"
}

$rDPToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process c:\windows\system32\mstsc.exe -WorkingDirectory "C:\Windows\system32"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Remote desktop utility"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Remote desktop utility"
}

$propertiesToolStripMenuItem_Click={
	#TODO: Place custom script here
	if ($datagridview_ADObjectSearch.SelectedCells[0].FormattedValue -eq "user")
	{
		#$param = "user"
	}
	elseif ($datagridview_ADObjectSearch.SelectedCells[0].FormattedValue -eq "group")
	{
		#$param = "group"
	}
	elseif ($datagridview_ADObjectSearch.SelectedCells[0].FormattedValue -eq "contact")
	{
		#$param = "contact"
	}
	elseif ($datagridview_ADObjectSearch.SelectedCells[0].FormattedValue -eq $null -or $datagridview_ADObjectSearch.SelectedCells[0].FormattedValue -eq "")
	{
		
	}
	else
	{
		$param = $datagridview_ADObjectSearch.SelectedCells[0].FormattedValue
		Show-Edit_ADuser_psf $param
	}
}

$documentLibraryToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://portal.kiewit.com/sites/imclientengag/CESD/team/CollaborationDocuments/Forms/AllItems.aspx"
	
	$IE = new-object -com internetexplorer.application
	$IE.navigate2("https://portal.kiewit.com/sites/imclientengag/CESD/team/CollaborationDocuments/Forms/AllItems.aspx")
	$IE.visible = $true
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching KSS Collaboration Documents"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching KSS Collaboration Documents"
}

$oTCalendarToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://portal.kiewit.com/sites/imclientengag/CESD/team/Lists/KSS%20OT%20Calendar/calendar.aspx"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching KSS OT Calendar"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching KSS OT Calendar"
}

$pTOCalendarToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://portal.kiewit.com/sites/imclientengag/CESD/team/Lists/PTO%20Calendar/calendar.aspx"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching KSS PTO Calendar"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching KSS PTO Calendar"
}

$accountRequestGuideToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://portal.kiewit.com/sites/imsecurity/End%20User%20Access%20and%20Security%20Guides/KieCore/Requesting%20a%20New%20AD%20Account%20Guide.pdf"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching account request guide PDF"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching account request guide PDF"
}

$accountMatrixToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://portal.kiewit.com/sites/imsecurity/team/_layouts/15/WopiFrame.aspx?sourcedoc={51408f91-81a3-47a3-8b24-d19584a80e26}&action=default&DefaultItemOpen=1"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Account Matrix"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Account Matrix"
}

$iDMToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://kwt-imopl01.kiewit.com:50001/idm"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching IDM web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching IDM web interface"
}

$v0VsV1DistrictsAllItemsToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://portal.kiewit.com/sites/kci/Lists/V0%20vs%20V1%20Districts/AllItems.aspx"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching V0 vs V1 KB inSNOW"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching V0 vs V1 KB inSNOW"
}

$directorToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "http://khonesdc75ddc01/Director/LogOn.aspx?ReturnUrl=%2fdirector%2f"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Citrix Director"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Citrix Director"
}

$xenMobileToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://kiewit.xm.citrix.com:4443/kiewit/login_xdm_uc.jsp;jsessionid=257393610335F58CD21F5E407F0B5312"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Xenmobile"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Xenmobile"
}

$ciscoVMToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://10.252.22.21/cuadmin/home.do"
	
	#-----------------------------
	# writing to log files
	#----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Cisco voicemail interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Cisco voicemail interface"
}

$cyberARKToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "http://cyberark.kiewit.com/"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Cyberark"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Cyberark"
}

$hostedExchangeAdminToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://mail.o365.kiewit.com/ecp"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching exchange management web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching exchange management web interface"
}

$o365ExchangeAdminToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://email.kiewit.com/ecp"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching o365 exchange management web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching 0365 exchange management web interface"
}

$cylanceToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://login.cylance.com/Login"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Cylance management web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Cylance management web interface"
}

$eFaxToolStripMenuItem_Click={
	#TODO: Place custom script here
	
	Invoke-Expression "c:\Temp\efax.ps1"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching eFax admin console log in"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching eFax admin console log in"
}

$finesseToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://khonemdcucx01.kiewitplaza.com:8445/desktop/container/?locale=en_US"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Finesse web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Finesse web interface"
}

$kieDriveToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://lr.kiewitplaza.com/dashboard"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Finesse web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Finesse web interface"
}

$printerLogicToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "http://printers.kiewitplaza.com/admin/"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching PrinterLogic web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching PrinterLogic web interface"
}

$clearpassToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://clearpass.kiewit.com/tips/tipsLogin.action"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Clearpass web interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Clearpass web interface"
}

$aLMToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://almkiewit1152.saas.hp.com/qcbin/"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching ALM website"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching ALM website"
}

$bitlockerToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "http://azrmbawwp001.kiewitplaza.com/HelpDesk/"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Bitlocker interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Bitlocker interface"
}

$mSDSOnlineToolStripMenuItem_Click={
	#TODO: Place custom script here
	$url = "https://www.msdsonline.com/"
	
	$ie = new-Object -com internetexplorer.application;
	$ie.visible = $true;
	$ie.navigate($url)
	
	while ($ie.Busy -eq $true)
	{
		start-sleep -milliseconds 1000;
	}
	
	$username = "KSS.Admin"
	$password = "Kiewit123Admin"
	
	
	$ie.Document.getElementById("LoginButton").Click()
	$ie.Document.getElementById("LoginUsername").value = $username
	$ie.Document.getElementByID("LoginPassword").value = $password
	$ie.Document.getElementById("SubmitLogin").Click()
	
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching MSDS online"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching MSDS online"
}

$sCCMLocatePCByUsernameToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "http://sccmreports/Reports/Pages/Report.aspx?ItemPath=%2fReportServer%2fUsers%2f__Computers+per+User"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching SCCM locate PC by username report"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching SCCM locate PC by username report"
}

$sCCMReportsToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "http://sccmreports"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching SCCM main report page"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching SCCM main report page"
}

$scorchDevToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "http://scorchdev"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching ScorDev website"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching ScorDev website"
}

$virusTotalToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "http://www.virustotal.com"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching virustotal website"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching virustotal website"
}

$powersourceWebsiteToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process iexplore.exe "http://kpehome.kiewitplaza.com/dashboard/home.kpe"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching powersource website"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching powersource website"
}

$newUserEmailToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "\\Khonemdcnas01\kss_team\Apps\Powershell Tools\KSS MultiTool\bin\Powersource Access - user's name.oft"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching email template for new user in Powersource"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching email template for new user in Powersource"
}

$covepointJonadamEmailToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "\\Khonemdcnas01\kss_team\Apps\Powershell Tools\KSS MultiTool\bin\Covepoint PS Users.oft"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching covepoint powersource template email"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching covepoint powersource template email"
}

$covepointNewUserEmailToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "\\Khonemdcnas01\kss_team\Apps\Powershell Tools\KSS MultiTool\bin\Powersource.oft"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching covepoint new user powersource template email"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching covepoint new user powersource template email"
}

$toolstripbutton_MS_Click={
	#TODO: Place custom script here
	$tabcontrol_Top.SelectedTab = $tabpage_Top_MS
}

$toolstripbutton_Saas_Click={
	#TODO: Place custom script here
	$tabcontrol_Top.SelectedTab = $tabpage_Top_SaaS
}

$toolstripbutton_MappedDrives_Click={
	#TODO: Place custom script here
	$tabcontrol_Top.SelectedTab = $tabpage_Top_MappedDrives
}

$toolstripbutton_NTFS_Click={
	#TODO: Place custom script here
	$tabcontrol_Top.SelectedTab = $tabpage_Top_NTFSPermissions
}

$toolstripbutton_CustomScript_Click={
	#TODO: Place custom script here
	$tabcontrol_Top.SelectedTab = $tabpage_Top_CustomScript
}

$toolstripbutton_Settings_Click={
	#TODO: Place custom script here
	$tabcontrol_Top.SelectedTab = $tabpage_Top_Settings
}

$button_PERNR_Swap_Click={
	#TODO: Place custom script here
	$OUTPUT = [System.Windows.Forms.MessageBox]::Show("Have you confirmed you have the correct accounts to swap?", "Status", 4)
	if ($OUTPUT -eq "YES")
	{
		#-----------------------------
		# getting all info from user accounts and applying to variables
		#-----------------------------
		$date = Get-Date -uFormat "%m/%d/%Y"
		
		$oldaccount = Get-ADUser -Identity $textbox_OldADAccount.Text -Properties employeeID, description, info
		$newaccount = Get-ADUser -Identity $combobox_PERNR.Text -Properties employeeID, description, info
		
		$oldPERNR = $oldaccount.employeeid
		$olddescription = $date + " converted to FTE by " + $username + " V1 Staff Employee updated PERNR"
		$oldinfo = $oldaccount.info
		$oldinfoupdate = $oldaccount.description + "     " + $oldinfo
		
		$newpernr = $newaccount.employeeid
		$newdescription = $date + " disabld by " + $username + " - Using user's original account: " + $textbox_OldADAccount
		$newinfo = $newaccount.info
		$newinfoupdate = $newaccount.description + "     " + $newinfo
		
		#-----------------------------
		# swapping PERNR, moving description to notes, updating description
		#-----------------------------
		get-aduser -Identity $oldaccount | set-aduser -replace @{ employeeid = $newpernr; info = $oldinfoupdate; description = $olddescription }  | Move-ADObject -TargetPath "OU=Recon,OU=Users,OU=Kiewit,DC=Kiewitplaza,DC=com" | Clear-ADAccountExpiration
		get-ADUser -Identity $newaccount | set-aduser -replace @{ employeeid = $oldpernr; info = $newinfoupdate; description = $newdescription }  | Disable-ADAccount 
		
		#-----------------------------
		# checking results
		#-----------------------------
		$oldaccountcheck = Get-ADUser $oldaccount -Properties info, employeeID, description, expirationtime
		$newaccountcheck = Get-ADUser $newaccount -Properties info, employeeID, description
		
		$oldPERNR1 = $oldaccountcheck.employeeID
		$olddescription1 = $oldaccountcheck.description
		$oldinfo1 = $oldaccountcheck.info
		$oldexpiration = $oldaccountcheck.expirationtime
		$newpernr1 = $newaccountcheck.employeeID
		$newdescription1 = $newaccountcheck.description
		$newinfo1 = $newaccountcheck.info
		
		$richtextbox_PERNR_Output.AppendText("$textbox_OldADAccount `n")
		$richtextbox_PERNR_Output.AppendText("PERNR : $oldPERNR1 `n")
		$richtextbox_PERNR_Output.AppendText("Description : $olddescription1 `n")
		$richtextbox_PERNR_Output.AppendText("Notes : $oldinfo1 `n")
		$richtextbox_PERNR_Output.appendtext("Confirm removal of expiration date: $oldexpiration `n")
		$richtextbox_PERNR_Output.AppendText("`n")
		$richtextbox_PERNR_Output.AppendText("$textbox_NewADAccount `n")
		$richtextbox_PERNR_Output.AppendText("PERNR : $newpernr1 `n")
		$richtextbox_PERNR_Output.AppendText("Description : $newdescription1 `n")
		$richtextbox_PERNR_Output.AppendText("Notes : $newinfo1 `n")
		
		#-----------------------------
		# writing to log file
		#-----------------------------
		$date = $(Get-Date).tostring("MM-dd-yyyy")
		$time = $(get-date -UFormat %R)
		Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Running PERNR swap, $textbox_OldADAccount was the old account :: $textbox_NewADAccount was the new account"
		
		Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Running PERNR swap"
		
		$textbox_PernerSWAP_TicketNumber_text = $textbox_PernerSWAP_TicketNumber.text
		log-write -logpath $logfile_ticket -linevalue "$date, $time, $userName, ticket: $textbox_PernerSWAP_TicketNumber_text, Running PERNR swap, old account: $textbox_OldADAccount  new account: $textbox_NewADAccount"
	}
}

$button_UpdateNTFSPermissions_Click={
	#TODO: Place custom script here
	if ($textbox_NTFS_ADGroupApproval.Text -contains "None" -or $textbox_NTFS_ADGroupApproval.Text -contains "Notify")
	{
		$ADgroup = $datagridview_NTFS_AcessList.SelectedCells[0].FormattedValue
		Show-NTFS_Permissions_psf $ADgroup
	}
	else
	{
		$OUTPUT = [System.Windows.Forms.MessageBox]::Show("Have you received documented approval in the ticket yet?", "Status", 4)
		if ($OUTPUT -eq "YES")
		{
			$ADgroup = $datagridview_NTFS_AcessList.SelectedCells[0].FormattedValue
			Show-NTFS_Permissions_psf $ADgroup
		}
		else
		{	
			$richtextbox_NTFS_OwnerInfoError.Text = "This requires approval first."
		}
	}
}

$pCManagementToolStripMenuItem_Click={
	#TODO: Place custom script here
	start-process '& compmgmt.msc'
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Launching Computer Management console"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Computer Management console"
}

$button_Duties_Refresh_Click={
	#TODO: Place custom script here
	#-----------------------------
	## define duties info
	#-----------------------------
	$objExcel = New-Object -ComObject Excel.Application
	$objExcel.Visible = $false
	
	#$WorkBook = $objExcel.Workbooks.Open($importedvariables.Workbook.Workbook)
	$WorkBook = $objExcel.Workbooks.Open($onedriveLocal)
	
	
	#---------------------------------------------------------------------------------------------------------------------------------
	## What is the tab you want to look up on the Ticket watch sheet?
	#---------------------------------------------------------------------------------------------------------------------------------
	$WorkSheet = $WorkBook.sheets.item($ImportedVariables.worksheet.worksheet)
	
	#---------------------------------------------------------------------------------------------------------------------------------
	## duty info
	#---------------------------------------------------------------------------------------------------------------------------------
	$richtextbox_Chat1.Text = $WorkSheet.Columns.Item($importedvariables.Chat1.Column).Rows.Item($ImportedVariables.Chat1.Row).Text
	$richtextbox_Chat2.Text = $WorkSheet.Columns.Item($importedvariables.Chat2.Column).Rows.Item($ImportedVariables.Chat2.Row).Text
	$richtextbox_Chat3.Text = $WorkSheet.Columns.Item($importedvariables.Chat3.Column).Rows.Item($ImportedVariables.Chat3.Row).Text
	$richtextbox_Chat4.Text = $WorkSheet.Columns.Item($importedvariables.Chat4.Column).Rows.Item($ImportedVariables.Chat4.Row).Text
	$richtextbox_Chat5.Text = $WorkSheet.Columns.Item($importedvariables.Chat5.Column).Rows.Item($ImportedVariables.Chat5.Row).Text
	$richtextbox_Chat6.Text = $WorkSheet.Columns.Item($importedvariables.Chat6.Column).Rows.Item($ImportedVariables.Chat6.Row).Text
	$richtextbox_Chat7.Text = $WorkSheet.Columns.Item($importedvariables.Chat7.Column).Rows.Item($ImportedVariables.Chat7.Row).Text
	$richtextbox_ChatPhone.Text = $WorkSheet.Columns.Item($importedvariables.Chat_Phone.Column).Rows.Item($ImportedVariables.Chat_Phone.Row).Text
	
	$richtextbox_Lunch1.Text = $WorkSheet.Columns.Item($importedvariables.Chat1.Lunch).Rows.Item($ImportedVariables.Chat1.Row).Text
	$richtextbox_Lunch2.Text = $WorkSheet.Columns.Item($importedvariables.Chat2.Lunch).Rows.Item($ImportedVariables.Chat2.Row).Text
	$richtextbox_Lunch3.Text = $WorkSheet.Columns.Item($importedvariables.Chat3.Lunch).Rows.Item($ImportedVariables.Chat3.Row).Text
	$richtextbox_Lunch4.Text = $WorkSheet.Columns.Item($importedvariables.Chat4.Lunch).Rows.Item($ImportedVariables.Chat4.Row).Text
	$richtextbox_Lunch5.Text = $WorkSheet.Columns.Item($importedvariables.Chat5.Lunch).Rows.Item($ImportedVariables.Chat5.Row).Text
	$richtextbox_Lunch6.Text = $WorkSheet.Columns.Item($importedvariables.Chat6.Lunch).Rows.Item($ImportedVariables.Chat6.Row).Text
	$richtextbox_Lunch7.Text = $WorkSheet.Columns.Item($importedvariables.Chat7.Lunch).Rows.Item($ImportedVariables.Chat7.Row).Text
	
	$richtextbox_AccessChats.Text = $WorkSheet.Columns.Item($importedvariables.AccessChats.Column).Rows.Item($ImportedVariables.AccessChats.Row).Text
	
	$richtextbox_Routing1.Text = $WorkSheet.Columns.Item($importedvariables.Routing.Column).Rows.Item($ImportedVariables.Routing.Row).Text
	$richtextbox_TWBackup.Text = $WorkSheet.Columns.Item($importedvariables.RoutingBackup.Column).Rows.Item($ImportedVariables.RoutingBackup.Row).Text
	
	$richtextbox_Phone1.Text = $WorkSheet.Columns.Item($importedvariables.Phone1.Column).Rows.Item($ImportedVariables.Phone1.Row).Text
	$richtextbox_Phone2.Text = $WorkSheet.Columns.Item($importedvariables.Phone2.Column).Rows.Item($ImportedVariables.Phone2.Row).Text
	$richtextbox_Phone3.Text = $WorkSheet.Columns.Item($importedvariables.Phone3.Column).Rows.Item($ImportedVariables.Phone3.Row).Text
	$richtextbox_Phone4.Text = $WorkSheet.Columns.Item($importedvariables.Phone4.Column).Rows.Item($ImportedVariables.Phone4.Row).Text
	$richtextbox_Phone5.Text = $WorkSheet.Columns.Item($importedvariables.Phone5.Column).Rows.Item($ImportedVariables.Phone5.Row).Text
	$richtextbox_Phone6.Text = $WorkSheet.Columns.Item($importedvariables.Phone6.Column).Rows.Item($ImportedVariables.Phone6.Row).Text
	$richtextbox_Phone7.Text = $WorkSheet.Columns.Item($importedvariables.Phone7.Column).Rows.Item($ImportedVariables.Phone7.Row).Text
	$richtextbox_Phone8.Text = $WorkSheet.Columns.Item($importedvariables.Phone8.Column).Rows.Item($ImportedVariables.Phone8.Row).Text
	$richtextbox_Phone9.Text = $WorkSheet.Columns.Item($importedvariables.Phone9.Column).Rows.Item($ImportedVariables.Phone9.Row).Text
	$richtextbox_Phone10.Text = $WorkSheet.Columns.Item($importedvariables.Phone10.Column).Rows.Item($ImportedVariables.Phone10.Row).Text
	
	#---------------------------------------------------------------------------------------------------------------------------------
	## KSS Contact info
	#---------------------------------------------------------------------------------------------------------------------------------	
	$richtextbox_KSSContact1.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSContact1.Column).Rows.Item($ImportedVariables.KSSContact1.Row).Text
	$richtextbox_KSSContact2.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSContact2.Column).Rows.Item($ImportedVariables.KSSContact2.Row).Text
	$richtextbox_KSSContact3.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSContact3.Column).Rows.Item($ImportedVariables.KSSContact3.Row).Text
	$richtextbox_KSSContact4.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSContact4.Column).Rows.Item($ImportedVariables.KSSContact4.Row).Text
	$richtextbox_KSSContact5.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSContact5.Column).Rows.Item($ImportedVariables.KSSContact5.Row).Text
	
	$richtextbox_KSSNum1.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSNum1.Column).Rows.Item($ImportedVariables.KSSNum1.Row).Text
	$richtextbox_KSSNum2.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSNum2.Column).Rows.Item($ImportedVariables.KSSNum2.Row).Text
	$richtextbox_KSSNum3.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSNum3.Column).Rows.Item($ImportedVariables.KSSNum3.Row).Text
	$richtextbox_KSSNum4.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSNum4.Column).Rows.Item($ImportedVariables.KSSNum4.Row).Text
	$richtextbox_KSSNum5.Text = $WorkSheet.Columns.Item($ImportedVariables.KSSNum5.Column).Rows.Item($ImportedVariables.KSSNum5.Row).Text
	
	$objExcel.DisplayAlerts = $False
	$objExcel.Quit()
	Stop-Process -name excel.exe
	
	#$MainForm.Refresh()
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Refresh of Daily Duties"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Refresh of Daily Duties"
}

$buttonChangeCustom_Click={
	#TODO: Place custom script here
	$groupbox_ADGroups_ChangeCustom.Visible = $true
	$groupbox_ADGroups.Visible = $false
	
}

$fiveCubitsToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://secure.fivecubits.com/login"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching FiveCubits website"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching FiveCubits website"
	
}

$button_RefreshKSSContacts_Click={
	#TODO: Place custom script here
	#-----------------------------
	## define duties info
	#-----------------------------
	$objExcel = New-Object -ComObject Excel.Application
	$objExcel.Visible = $false
	
	#$WorkBook = $objExcel.Workbooks.Open($importedvariables.Workbook.Workbook)
	$WorkBook = $objExcel.Workbooks.Open($onedriveLocal)
	
	#---------------------------------------------------------------------------------------------------------------------------------
	## What is the tab you want to look up on the Ticket watch sheet for KSS Contacts
	#---------------------------------------------------------------------------------------------------------------------------------
	$WorkSheet = $WorkBook.sheets.item($importedvariables_KSSContacts.worksheet.worksheet)
	
	#---------------------------------------------------------------------------------------------------------------------------------
	## KSS Contact info
	#---------------------------------------------------------------------------------------------------------------------------------	
	$richtextbox_KSSContact1.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact1.Column).Rows.Item($importedvariables_KSSContacts.KSSContact1.Row).Text
	$richtextbox_KSSContact2.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact2.Column).Rows.Item($importedvariables_KSSContacts.KSSContact2.Row).Text
	$richtextbox_KSSContact3.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact3.Column).Rows.Item($importedvariables_KSSContacts.KSSContact3.Row).Text
	$richtextbox_KSSContact4.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact4.Column).Rows.Item($importedvariables_KSSContacts.KSSContact4.Row).Text
	$richtextbox_KSSContact5.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact5.Column).Rows.Item($importedvariables_KSSContacts.KSSContact5.Row).Text
	$richtextbox_KSSContact6.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact6.Column).Rows.Item($importedvariables_KSSContacts.KSSContact6.Row).Text
	
	$richtextbox_KSSNum1.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum1.Column).Rows.Item($importedvariables_KSSContacts.KSSNum1.Row).Text
	$richtextbox_KSSNum2.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum2.Column).Rows.Item($importedvariables_KSSContacts.KSSNum2.Row).Text
	$richtextbox_KSSNum3.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum3.Column).Rows.Item($importedvariables_KSSContacts.KSSNum3.Row).Text
	$richtextbox_KSSNum4.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum4.Column).Rows.Item($importedvariables_KSSContacts.KSSNum4.Row).Text
	$richtextbox_KSSNum5.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum5.Column).Rows.Item($importedvariables_KSSContacts.KSSNum5.Row).Text
	$richtextbox_KSSNum6.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum6.Column).Rows.Item($importedvariables_KSSContacts.KSSNum6.Row).Text
	
	$objExcel.DisplayAlerts = $False
	$objExcel.Quit()
	Stop-Process -name excel.exe
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Refreshing KSS Contacts from source"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Refreshing KSS Contacts from source"
}

$button_FSDuty_Refresh_Click={
	#TODO: Place custom script here
	
	$objExcel = New-Object -ComObject Excel.Application
	$objExcel.Visible = $false
	
	#$WorkBook = $objExcel.Workbooks.Open($importedvariables.Workbook.Workbook)
	$WorkBook = $objExcel.Workbooks.Open($onedriveLocal)
	
	#---------------------------------------------------------------------------------------------------------------------------------
	## What is the tab you want to look up on the Ticket watch sheet for Field Services info
	#---------------------------------------------------------------------------------------------------------------------------------
	$WorkSheet = $WorkBook.sheets.item($importedvariables_FS.worksheet.worksheet)
	
	#---------------------------------------------------------------------------------------------------------------------------------
	## KSS Contact info
	#---------------------------------------------------------------------------------------------------------------------------------	
	$richtextbox_FS_Phones1.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone1.Column).Rows.Item($importedvariables_FS.Phone1.Row).Text
	$richtextbox_FS_Phones2.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone2.Column).Rows.Item($importedvariables_FS.Phone2.Row).Text
	$richtextbox_FS_Phones3.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone3.Column).Rows.Item($importedvariables_FS.Phone3.Row).Text
	$richtextbox_FS_Phones4.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone4.Column).Rows.Item($importedvariables_FS.Phone4.Row).Text
	$richtextbox_FS_Phones5.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone5.Column).Rows.Item($importedvariables_FS.Phone5.Row).Text
	$richtextbox_FS_Phones6.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone6.Column).Rows.Item($importedvariables_FS.Phone6.Row).Text
	$richtextbox_FS_Phones7.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone7.Column).Rows.Item($importedvariables_FS.Phone7.Row).Text
	$richtextbox_FS_Phones8.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone8.Column).Rows.Item($importedvariables_FS.Phone8.Row).Text
	$richtextbox_FS_Phones9.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone9.Column).Rows.Item($importedvariables_FS.Phone9.Row).Text
	$richtextbox_FS_Phones10.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone10.Column).Rows.Item($importedvariables_FS.Phone10.Row).Text
	$richtextbox_FS_Phones11.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone11.Column).Rows.Item($importedvariables_FS.Phone11.Row).Text
	$richtextbox_FS_Phones12.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone12.Column).Rows.Item($importedvariables_FS.Phone12.Row).Text
	$richtextbox_FS_Phones13.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone13.Column).Rows.Item($importedvariables_FS.Phone13.Row).Text
	$richtextbox_FS_Phones14.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone14.Column).Rows.Item($importedvariables_FS.Phone14.Row).Text
	$richtextbox_FS_Phones15.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone15.Column).Rows.Item($importedvariables_FS.Phone15.Row).Text
	$richtextbox_FS_Phones16.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone16.Column).Rows.Item($importedvariables_FS.Phone16.Row).Text
	$richtextbox_FS_Phones17.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone17.Column).Rows.Item($importedvariables_FS.Phone17.Row).Text
	$richtextbox_FS_Phones18.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone18.Column).Rows.Item($importedvariables_FS.Phone18.Row).Text
	$richtextbox_FS_Phones19.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone19.Column).Rows.Item($importedvariables_FS.Phone19.Row).Text
	$richtextbox_FS_Phones20.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone20.Column).Rows.Item($importedvariables_FS.Phone20.Row).Text
	$richtextbox_FS_Phones21.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone21.Column).Rows.Item($importedvariables_FS.Phone21.Row).Text
	$richtextbox_FS_Phones22.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone22.Column).Rows.Item($importedvariables_FS.Phone22.Row).Text
	$richtextbox_FS_Phones23.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone23.Column).Rows.Item($importedvariables_FS.Phone23.Row).Text
	$richtextbox_FS_Phones24.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone24.Column).Rows.Item($importedvariables_FS.Phone24.Row).Text
	$richtextbox_FS_Phones25.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone25.Column).Rows.Item($importedvariables_FS.Phone25.Row).Text
	
	$richtextbox_FS_PhStart1.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone1.StartColumn).Rows.Item($importedvariables_FS.Phone1.Row).Text
	$richtextbox_FS_PhStart2.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone2.StartColumn).Rows.Item($importedvariables_FS.Phone2.Row).Text
	$richtextbox_FS_PhStart3.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone3.StartColumn).Rows.Item($importedvariables_FS.Phone3.Row).Text
	$richtextbox_FS_PhStart4.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone4.StartColumn).Rows.Item($importedvariables_FS.Phone4.Row).Text
	$richtextbox_FS_PhStart5.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone5.StartColumn).Rows.Item($importedvariables_FS.Phone5.Row).Text
	$richtextbox_FS_PhStart6.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone6.StartColumn).Rows.Item($importedvariables_FS.Phone6.Row).Text
	$richtextbox_FS_PhStart7.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone7.StartColumn).Rows.Item($importedvariables_FS.Phone7.Row).Text
	$richtextbox_FS_PhStart8.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone8.StartColumn).Rows.Item($importedvariables_FS.Phone8.Row).Text
	$richtextbox_FS_PhStart9.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone9.StartColumn).Rows.Item($importedvariables_FS.Phone9.Row).Text
	$richtextbox_FS_PhStart10.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone10.StartColumn).Rows.Item($importedvariables_FS.Phone10.Row).Text
	$richtextbox_FS_PhStart11.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone11.StartColumn).Rows.Item($importedvariables_FS.Phone11.Row).Text
	$richtextbox_FS_PhStart12.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone12.StartColumn).Rows.Item($importedvariables_FS.Phone12.Row).Text
	$richtextbox_FS_PhStart13.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone13.StartColumn).Rows.Item($importedvariables_FS.Phone13.Row).Text
	$richtextbox_FS_PhStart14.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone14.StartColumn).Rows.Item($importedvariables_FS.Phone14.Row).Text
	$richtextbox_FS_PhStart15.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone15.StartColumn).Rows.Item($importedvariables_FS.Phone15.Row).Text
	$richtextbox_FS_PhStart16.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone16.StartColumn).Rows.Item($importedvariables_FS.Phone16.Row).Text
	$richtextbox_FS_PhStart17.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone17.StartColumn).Rows.Item($importedvariables_FS.Phone17.Row).Text
	$richtextbox_FS_PhStart18.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone18.StartColumn).Rows.Item($importedvariables_FS.Phone18.Row).Text
	$richtextbox_FS_PhStart19.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone19.StartColumn).Rows.Item($importedvariables_FS.Phone19.Row).Text
	$richtextbox_FS_PhStart20.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone20.StartColumn).Rows.Item($importedvariables_FS.Phone20.Row).Text
	$richtextbox_FS_PhStart21.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone21.StartColumn).Rows.Item($importedvariables_FS.Phone21.Row).Text
	$richtextbox_FS_PhStart22.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone22.StartColumn).Rows.Item($importedvariables_FS.Phone22.Row).Text
	$richtextbox_FS_PhStart23.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone23.StartColumn).Rows.Item($importedvariables_FS.Phone23.Row).Text
	$richtextbox_FS_PhStart24.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone24.StartColumn).Rows.Item($importedvariables_FS.Phone24.Row).Text
	$richtextbox_FS_PhStart25.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone25.StartColumn).Rows.Item($importedvariables_FS.Phone25.Row).Text
	
	$richtextbox_FS_PhEnd1.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone1.EndColumn).Rows.Item($importedvariables_FS.Phone1.Row).Text
	$richtextbox_FS_PhEnd2.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone2.EndColumn).Rows.Item($importedvariables_FS.Phone2.Row).Text
	$richtextbox_FS_PhEnd3.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone3.EndColumn).Rows.Item($importedvariables_FS.Phone3.Row).Text
	$richtextbox_FS_PhEnd4.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone4.EndColumn).Rows.Item($importedvariables_FS.Phone4.Row).Text
	$richtextbox_FS_PhEnd5.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone5.EndColumn).Rows.Item($importedvariables_FS.Phone5.Row).Text
	$richtextbox_FS_PhEnd6.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone6.EndColumn).Rows.Item($importedvariables_FS.Phone6.Row).Text
	$richtextbox_FS_PhEnd7.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone7.EndColumn).Rows.Item($importedvariables_FS.Phone7.Row).Text
	$richtextbox_FS_PhEnd8.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone8.EndColumn).Rows.Item($importedvariables_FS.Phone8.Row).Text
	$richtextbox_FS_PhEnd9.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone9.EndColumn).Rows.Item($importedvariables_FS.Phone9.Row).Text
	$richtextbox_FS_PhEnd10.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone10.EndColumn).Rows.Item($importedvariables_FS.Phone10.Row).Text
	$richtextbox_FS_PhEnd11.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone11.EndColumn).Rows.Item($importedvariables_FS.Phone11.Row).Text
	$richtextbox_FS_PhEnd12.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone12.EndColumn).Rows.Item($importedvariables_FS.Phone12.Row).Text
	$richtextbox_FS_PhEnd13.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone13.EndColumn).Rows.Item($importedvariables_FS.Phone13.Row).Text
	$richtextbox_FS_PhEnd14.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone14.EndColumn).Rows.Item($importedvariables_FS.Phone14.Row).Text
	$richtextbox_FS_PhEnd15.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone15.EndColumn).Rows.Item($importedvariables_FS.Phone15.Row).Text
	$richtextbox_FS_PhEnd16.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone16.EndColumn).Rows.Item($importedvariables_FS.Phone16.Row).Text
	$richtextbox_FS_PhEnd17.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone17.EndColumn).Rows.Item($importedvariables_FS.Phone17.Row).Text
	$richtextbox_FS_PhEnd18.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone18.EndColumn).Rows.Item($importedvariables_FS.Phone18.Row).Text
	$richtextbox_FS_PhEnd19.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone19.EndColumn).Rows.Item($importedvariables_FS.Phone19.Row).Text
	$richtextbox_FS_PhEnd20.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone20.EndColumn).Rows.Item($importedvariables_FS.Phone20.Row).Text
	$richtextbox_FS_PhEnd21.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone21.EndColumn).Rows.Item($importedvariables_FS.Phone21.Row).Text
	$richtextbox_FS_PhEnd22.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone22.EndColumn).Rows.Item($importedvariables_FS.Phone22.Row).Text
	$richtextbox_FS_PhEnd23.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone23.EndColumn).Rows.Item($importedvariables_FS.Phone23.Row).Text
	$richtextbox_FS_PhEnd24.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone24.EndColumn).Rows.Item($importedvariables_FS.Phone24.Row).Text
	$richtextbox_FS_PhEnd25.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone25.EndColumn).Rows.Item($importedvariables_FS.Phone25.Row).Text
	
	$textbox_DellSupport1.Text = $WorkSheet.Columns.Item($importedvariables_FS.DellSupport1.Column).Rows.Item($importedvariables_FS.DellSupport1.Row).Text
	$textbox_DellSupport2.Text = $WorkSheet.Columns.Item($importedvariables_FS.DellSupport2.Column).Rows.Item($importedvariables_FS.DellSupport2.Row).Text
	$textbox_DellSupport3.Text = $WorkSheet.Columns.Item($importedvariables_FS.DellSupport3.Column).Rows.Item($importedvariables_FS.DellSupport3.Row).Text
	
	$textbox_FSChats1.Text = $WorkSheet.Columns.Item($importedvariables_FS.Chats1.Column).Rows.Item($importedvariables_FS.Chats1.Row).Text
	$textbox_FSChats2.Text = $WorkSheet.Columns.Item($importedvariables_FS.Chats2.Column).Rows.Item($importedvariables_FS.Chats2.Row).Text
	$textbox_FSChats3.Text = $WorkSheet.Columns.Item($importedvariables_FS.Chats3.Column).Rows.Item($importedvariables_FS.Chats3.Row).Text
	
	$textbox_FS_PTO1.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO1.Column).Rows.Item($importedvariables_FS.PTO1.Row).Text
	$textbox_FS_PTO2.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO2.Column).Rows.Item($importedvariables_FS.PTO2.Row).Text
	$textbox_FS_PTO3.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO3.Column).Rows.Item($importedvariables_FS.PTO3.Row).Text
	$textbox_FS_PTO4.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO4.Column).Rows.Item($importedvariables_FS.PTO4.Row).Text
	$textbox_FS_PTO5.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO5.Column).Rows.Item($importedvariables_FS.PTO5.Row).Text
	$textbox_FS_PTO6.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO6.Column).Rows.Item($importedvariables_FS.PTO6.Row).Text
	$textbox_FS_PTO7.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO7.Column).Rows.Item($importedvariables_FS.PTO7.Row).Text
	$textbox_FS_PTO8.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO8.Column).Rows.Item($importedvariables_FS.PTO8.Row).Text
	$textbox_FS_PTO9.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO9.Column).Rows.Item($importedvariables_FS.PTO9.Row).Text
	$textbox_FS_PTO10.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO10.Column).Rows.Item($importedvariables_FS.PTO10.Row).Text
	
	$objExcel.DisplayAlerts = $False
	$objExcel.Quit()
	Stop-Process -name excel.exe
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Refreshing FS Daily Duties"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, REfreshing FS Daily Duties"
}

$button_FS_Edit_Click={
	#TODO: Place custom script here
	Show-FS_DutySettings_psf
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Opening FS Duty management interface"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Opening FS Duty management interface"
}

$mFACheckToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process $installpath\bin\MFA_Check.exe
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching MFA Check app"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching MFA Check app"
}

$toolstripcombobox1_TextChanged={
	#TODO: Place custom script here
	Start-Process $zeroday_share\$($toolstripcombobox1.Text)
}

$button_ApplyDC_Click={
	#TODO: Place custom script here
	$global:primaryDC = $combobox_DCs.Text
	$textbox_ApplyDC.Text = "Primary DC = $global:primaryDC"
}

$buttonKSSContacts_Click={
	#TODO: Place custom script here
	Show-ContactsSettings_psf
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Opening Contact info location to display items properly"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Opening Contact info location to display items properly"
}

$button_DutiesEdit_Click={
	#TODO: Place custom script here
	Show-DutySettings_psf
}

$button_PW_SettingsApply_Click={
	#TODO: Place custom script here
	#$Chat1 = @{ "Column" = $Chat_Colum1.Text; "Row" = $Chat_Row1.text; "Lunch" = $Chat_ColumnLunch1.Text }
	
	$history = @{ "Length" = $textbox_PW_HistoryLength.Text }
	$Age = @{ "Maximum" = $textbox_PW_AgeMax.Text; "Minimum" = $textbox_PW_AgeMin.Text }
	$MinChar = @{ "Length" = $textbox_PW_MinCharLength.Text; "PassPhrase" = $textbox_PW_PassphraseLength.Text }
	$Complexity = @{ "Capital" = $textbox_PW_Capital.Text; "Lower" = $textbox_PW_LowerCase.Text; "Number" = $textbox_PW_Number.Text; "Special" = $textbox_PW_Special.Text }
	
	$inicontent = @{ "History" = $history; "Age" = $Age; "MinChar" = $MinChar; "Complexity" = $Complexity }
	Out-IniFile -FilePath $passwordini -InputObject $inicontent -Force
	
	$textbox_PW_Output.Text = "Please restart to take effect"
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Update AD PW policies"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Update AD PW policies"
}

$tabpage_Settings_Leave={
	#TODO: Place custom script here
	
	$textbox_PW_Output.Clear()
	$textbox_ApplyDC.Clear()
}

$tabpage_Settings_ReadMe_Enter={
	#TODO: Place custom script here
	$readme = (Get-Content $lib\readme.txt) -join "`n"
	
	$richtextbox_ReadMe.Text = $readme
	
}

$buttonRefreshList_Click={
	#TODO: Place custom script here
	$grouplist = Get-ChildItem "\\khonemdcnas01\KSS_Team\Zipped_Installers" -Recurse -Filter "*.zip" | Select-Object FullName, Name
	Load-ComboBox $combobox_TransferApp2PC $grouplist.name
}

$tabpage_Top_Settings_Enter={
	#TODO: Place custom script here
	
	if ($global:duty -eq 0)
	{
	
		#-----------------------------
		## define duties info
		#-----------------------------
		$objExcel = New-Object -ComObject Excel.Application
		$objExcel.Visible = $false
		
		#$WorkBook = $objExcel.Workbooks.Open($importedvariables.Workbook.Workbook)
		$WorkBook = $objExcel.Workbooks.Open($onedriveLocal)
		
		
		#---------------------------------------------------------------------------------------------------------------------------------
		## What is the tab you want to look up on the Ticket watch sheet for servide desk info
		#---------------------------------------------------------------------------------------------------------------------------------
		$WorkSheet = $WorkBook.sheets.item($ImportedVariables.worksheet.worksheet)
		
		#---------------------------------------------------------------------------------------------------------------------------------
		## duty info
		#---------------------------------------------------------------------------------------------------------------------------------
		$richtextbox_Chat1.Text = $WorkSheet.Columns.Item($importedvariables.Chat1.Column).Rows.Item($ImportedVariables.Chat1.Row).Text
		$richtextbox_Chat2.Text = $WorkSheet.Columns.Item($importedvariables.Chat2.Column).Rows.Item($ImportedVariables.Chat2.Row).Text
		$richtextbox_Chat3.Text = $WorkSheet.Columns.Item($importedvariables.Chat3.Column).Rows.Item($ImportedVariables.Chat3.Row).Text
		$richtextbox_Chat4.Text = $WorkSheet.Columns.Item($importedvariables.Chat4.Column).Rows.Item($ImportedVariables.Chat4.Row).Text
		$richtextbox_Chat5.Text = $WorkSheet.Columns.Item($importedvariables.Chat5.Column).Rows.Item($ImportedVariables.Chat5.Row).Text
		$richtextbox_Chat6.Text = $WorkSheet.Columns.Item($importedvariables.Chat6.Column).Rows.Item($ImportedVariables.Chat6.Row).Text
		$richtextbox_Chat7.Text = $WorkSheet.Columns.Item($importedvariables.Chat7.Column).Rows.Item($ImportedVariables.Chat7.Row).Text
		$richtextbox_ChatPhone.Text = $WorkSheet.Columns.Item($importedvariables.Chat_Phone.Column).Rows.Item($ImportedVariables.Chat_Phone.Row).Text
		
		$richtextbox_Lunch1.Text = $WorkSheet.Columns.Item($importedvariables.Chat1.Lunch).Rows.Item($ImportedVariables.Chat1.Row).Text
		$richtextbox_Lunch2.Text = $WorkSheet.Columns.Item($importedvariables.Chat2.Lunch).Rows.Item($ImportedVariables.Chat2.Row).Text
		$richtextbox_Lunch3.Text = $WorkSheet.Columns.Item($importedvariables.Chat3.Lunch).Rows.Item($ImportedVariables.Chat3.Row).Text
		$richtextbox_Lunch4.Text = $WorkSheet.Columns.Item($importedvariables.Chat4.Lunch).Rows.Item($ImportedVariables.Chat4.Row).Text
		$richtextbox_Lunch5.Text = $WorkSheet.Columns.Item($importedvariables.Chat5.Lunch).Rows.Item($ImportedVariables.Chat5.Row).Text
		$richtextbox_Lunch6.Text = $WorkSheet.Columns.Item($importedvariables.Chat6.Lunch).Rows.Item($ImportedVariables.Chat6.Row).Text
		$richtextbox_Lunch7.Text = $WorkSheet.Columns.Item($importedvariables.Chat7.Lunch).Rows.Item($ImportedVariables.Chat7.Row).Text
		
		$richtextbox_AccessChats.Text = $WorkSheet.Columns.Item($importedvariables.AccessChats.Column).Rows.Item($ImportedVariables.AccessChats.Row).Text
		
		$richtextbox_Routing1.Text = $WorkSheet.Columns.Item($importedvariables.Routing.Column).Rows.Item($ImportedVariables.Routing.Row).Text
		$richtextbox_TWBackup.Text = $WorkSheet.Columns.Item($importedvariables.RoutingBackup.Column).Rows.Item($ImportedVariables.RoutingBackup.Row).Text
		
		$richtextbox_Phone1.Text = $WorkSheet.Columns.Item($importedvariables.Phone1.Column).Rows.Item($ImportedVariables.Phone1.Row).Text
		$richtextbox_Phone2.Text = $WorkSheet.Columns.Item($importedvariables.Phone2.Column).Rows.Item($ImportedVariables.Phone2.Row).Text
		$richtextbox_Phone3.Text = $WorkSheet.Columns.Item($importedvariables.Phone3.Column).Rows.Item($ImportedVariables.Phone3.Row).Text
		$richtextbox_Phone4.Text = $WorkSheet.Columns.Item($importedvariables.Phone4.Column).Rows.Item($ImportedVariables.Phone4.Row).Text
		$richtextbox_Phone5.Text = $WorkSheet.Columns.Item($importedvariables.Phone5.Column).Rows.Item($ImportedVariables.Phone5.Row).Text
		$richtextbox_Phone6.Text = $WorkSheet.Columns.Item($importedvariables.Phone6.Column).Rows.Item($ImportedVariables.Phone6.Row).Text
		$richtextbox_Phone7.Text = $WorkSheet.Columns.Item($importedvariables.Phone7.Column).Rows.Item($ImportedVariables.Phone7.Row).Text
		$richtextbox_Phone8.Text = $WorkSheet.Columns.Item($importedvariables.Phone8.Column).Rows.Item($ImportedVariables.Phone8.Row).Text
		$richtextbox_Phone9.Text = $WorkSheet.Columns.Item($importedvariables.Phone9.Column).Rows.Item($ImportedVariables.Phone9.Row).Text
		$richtextbox_Phone10.Text = $WorkSheet.Columns.Item($importedvariables.Phone10.Column).Rows.Item($ImportedVariables.Phone10.Row).Text
		
		
		#---------------------------------------------------------------------------------------------------------------------------------
		## What is the tab you want to look up on the Ticket watch sheet for KSS Contacts
		#---------------------------------------------------------------------------------------------------------------------------------
		$WorkSheet = $WorkBook.sheets.item($importedvariables_KSSContacts.worksheet.worksheet)
		
		#---------------------------------------------------------------------------------------------------------------------------------
		## KSS Contact info
		#---------------------------------------------------------------------------------------------------------------------------------	
		$richtextbox_KSSContact1.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact1.Column).Rows.Item($importedvariables_KSSContacts.KSSContact1.Row).Text
		$richtextbox_KSSContact2.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact2.Column).Rows.Item($importedvariables_KSSContacts.KSSContact2.Row).Text
		$richtextbox_KSSContact3.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact3.Column).Rows.Item($importedvariables_KSSContacts.KSSContact3.Row).Text
		$richtextbox_KSSContact4.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact4.Column).Rows.Item($importedvariables_KSSContacts.KSSContact4.Row).Text
		$richtextbox_KSSContact5.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact5.Column).Rows.Item($importedvariables_KSSContacts.KSSContact5.Row).Text
		$richtextbox_KSSContact6.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSContact6.Column).Rows.Item($importedvariables_KSSContacts.KSSContact6.Row).Text
		
		$richtextbox_KSSNum1.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum1.Column).Rows.Item($importedvariables_KSSContacts.KSSNum1.Row).Text
		$richtextbox_KSSNum2.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum2.Column).Rows.Item($importedvariables_KSSContacts.KSSNum2.Row).Text
		$richtextbox_KSSNum3.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum3.Column).Rows.Item($importedvariables_KSSContacts.KSSNum3.Row).Text
		$richtextbox_KSSNum4.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum4.Column).Rows.Item($importedvariables_KSSContacts.KSSNum4.Row).Text
		$richtextbox_KSSNum5.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum5.Column).Rows.Item($importedvariables_KSSContacts.KSSNum5.Row).Text
		$richtextbox_KSSNum6.Text = $WorkSheet.Columns.Item($importedvariables_KSSContacts.KSSNum6.Column).Rows.Item($importedvariables_KSSContacts.KSSNum6.Row).Text
		
		$objExcel.DisplayAlerts = $False
		$objExcel.Quit()
		Stop-Process -name "Excel"
		Stop-Process -name excel.exe
		
		$global:duty = 1
	}
	
}

$tabpage_Settings_Enter={
	#TODO: Place custom script here
	
	if ($global:settings -eq "0")
	{
		
		$PW_inicontent = Get-IniContent -FilePath $passwordini
		
		$textbox_PW_HistoryLength.Text = $PW_inicontent.History.Length
		$textbox_PW_AgeMax.Text = $PW_inicontent.Age.Maximum
		$textbox_PW_AgeMin.Text = $PW_inicontent.Age.Minimum
		$textbox_PW_MinCharLength.Text = $PW_inicontent.MinChar.Length
		$textbox_PW_PassphraseLength.Text = $PW_inicontent.MinChar.PassPhrase
		$textbox_PW_Capital.Text = $PW_inicontent.Complexity.Capital
		$textbox_PW_LowerCase.Text = $PW_inicontent.Complexity.Lower
		$textbox_PW_Number.Text = $PW_inicontent.Complexity.Number
		$textbox_PW_Special.Text = $PW_inicontent.Complexity.Special
		
		update-combobox $combobox_DCs $(Get-ADDomainController -filter * | sort-object).name
		
		$global:settings = 1
	}
}

$tabpage_Settings_FSDailyDuty_Enter={
	#TODO: Place custom script here
	
	if ($global:FSDuties -eq "0")
	{
		#-----------------------------
		## define duties info
		#-----------------------------
		$objExcel = New-Object -ComObject Excel.Application
		$objExcel.Visible = $false
		
		#$WorkBook = $objExcel.Workbooks.Open($importedvariables.Workbook.Workbook)
		$WorkBook = $objExcel.Workbooks.Open($onedriveLocal)
		
		#---------------------------------------------------------------------------------------------------------------------------------
		## What is the tab you want to look up on the Ticket watch sheet for Field Services info
		#---------------------------------------------------------------------------------------------------------------------------------
		$WorkSheet = $WorkBook.sheets.item($importedvariables_FS.worksheet.worksheet)
		
		#---------------------------------------------------------------------------------------------------------------------------------
		## KSS Contact info
		#---------------------------------------------------------------------------------------------------------------------------------	
		$richtextbox_FS_Phones1.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone1.Column).Rows.Item($importedvariables_FS.Phone1.Row).Text
		$richtextbox_FS_Phones2.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone2.Column).Rows.Item($importedvariables_FS.Phone2.Row).Text
		$richtextbox_FS_Phones3.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone3.Column).Rows.Item($importedvariables_FS.Phone3.Row).Text
		$richtextbox_FS_Phones4.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone4.Column).Rows.Item($importedvariables_FS.Phone4.Row).Text
		$richtextbox_FS_Phones5.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone5.Column).Rows.Item($importedvariables_FS.Phone5.Row).Text
		$richtextbox_FS_Phones6.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone6.Column).Rows.Item($importedvariables_FS.Phone6.Row).Text
		$richtextbox_FS_Phones7.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone7.Column).Rows.Item($importedvariables_FS.Phone7.Row).Text
		$richtextbox_FS_Phones8.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone8.Column).Rows.Item($importedvariables_FS.Phone8.Row).Text
		$richtextbox_FS_Phones9.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone9.Column).Rows.Item($importedvariables_FS.Phone9.Row).Text
		$richtextbox_FS_Phones10.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone10.Column).Rows.Item($importedvariables_FS.Phone10.Row).Text
		$richtextbox_FS_Phones11.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone11.Column).Rows.Item($importedvariables_FS.Phone11.Row).Text
		$richtextbox_FS_Phones12.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone12.Column).Rows.Item($importedvariables_FS.Phone12.Row).Text
		$richtextbox_FS_Phones13.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone13.Column).Rows.Item($importedvariables_FS.Phone13.Row).Text
		$richtextbox_FS_Phones14.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone14.Column).Rows.Item($importedvariables_FS.Phone14.Row).Text
		$richtextbox_FS_Phones15.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone15.Column).Rows.Item($importedvariables_FS.Phone15.Row).Text
		$richtextbox_FS_Phones16.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone16.Column).Rows.Item($importedvariables_FS.Phone16.Row).Text
		$richtextbox_FS_Phones17.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone17.Column).Rows.Item($importedvariables_FS.Phone17.Row).Text
		$richtextbox_FS_Phones18.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone18.Column).Rows.Item($importedvariables_FS.Phone18.Row).Text
		$richtextbox_FS_Phones19.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone19.Column).Rows.Item($importedvariables_FS.Phone19.Row).Text
		$richtextbox_FS_Phones20.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone20.Column).Rows.Item($importedvariables_FS.Phone20.Row).Text
		$richtextbox_FS_Phones21.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone21.Column).Rows.Item($importedvariables_FS.Phone21.Row).Text
		$richtextbox_FS_Phones22.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone22.Column).Rows.Item($importedvariables_FS.Phone22.Row).Text
		$richtextbox_FS_Phones23.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone23.Column).Rows.Item($importedvariables_FS.Phone23.Row).Text
		$richtextbox_FS_Phones24.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone24.Column).Rows.Item($importedvariables_FS.Phone24.Row).Text
		$richtextbox_FS_Phones25.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone25.Column).Rows.Item($importedvariables_FS.Phone25.Row).Text
		
		$richtextbox_FS_PhStart1.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone1.StartColumn).Rows.Item($importedvariables_FS.Phone1.Row).Text
		$richtextbox_FS_PhStart2.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone2.StartColumn).Rows.Item($importedvariables_FS.Phone2.Row).Text
		$richtextbox_FS_PhStart3.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone3.StartColumn).Rows.Item($importedvariables_FS.Phone3.Row).Text
		$richtextbox_FS_PhStart4.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone4.StartColumn).Rows.Item($importedvariables_FS.Phone4.Row).Text
		$richtextbox_FS_PhStart5.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone5.StartColumn).Rows.Item($importedvariables_FS.Phone5.Row).Text
		$richtextbox_FS_PhStart6.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone6.StartColumn).Rows.Item($importedvariables_FS.Phone6.Row).Text
		$richtextbox_FS_PhStart7.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone7.StartColumn).Rows.Item($importedvariables_FS.Phone7.Row).Text
		$richtextbox_FS_PhStart8.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone8.StartColumn).Rows.Item($importedvariables_FS.Phone8.Row).Text
		$richtextbox_FS_PhStart9.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone9.StartColumn).Rows.Item($importedvariables_FS.Phone9.Row).Text
		$richtextbox_FS_PhStart10.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone10.StartColumn).Rows.Item($importedvariables_FS.Phone10.Row).Text
		$richtextbox_FS_PhStart11.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone11.StartColumn).Rows.Item($importedvariables_FS.Phone11.Row).Text
		$richtextbox_FS_PhStart12.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone12.StartColumn).Rows.Item($importedvariables_FS.Phone12.Row).Text
		$richtextbox_FS_PhStart13.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone13.StartColumn).Rows.Item($importedvariables_FS.Phone13.Row).Text
		$richtextbox_FS_PhStart14.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone14.StartColumn).Rows.Item($importedvariables_FS.Phone14.Row).Text
		$richtextbox_FS_PhStart15.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone15.StartColumn).Rows.Item($importedvariables_FS.Phone15.Row).Text
		$richtextbox_FS_PhStart16.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone16.StartColumn).Rows.Item($importedvariables_FS.Phone16.Row).Text
		$richtextbox_FS_PhStart17.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone17.StartColumn).Rows.Item($importedvariables_FS.Phone17.Row).Text
		$richtextbox_FS_PhStart18.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone18.StartColumn).Rows.Item($importedvariables_FS.Phone18.Row).Text
		$richtextbox_FS_PhStart19.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone19.StartColumn).Rows.Item($importedvariables_FS.Phone19.Row).Text
		$richtextbox_FS_PhStart20.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone20.StartColumn).Rows.Item($importedvariables_FS.Phone20.Row).Text
		$richtextbox_FS_PhStart21.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone21.StartColumn).Rows.Item($importedvariables_FS.Phone21.Row).Text
		$richtextbox_FS_PhStart22.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone22.StartColumn).Rows.Item($importedvariables_FS.Phone22.Row).Text
		$richtextbox_FS_PhStart23.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone23.StartColumn).Rows.Item($importedvariables_FS.Phone23.Row).Text
		$richtextbox_FS_PhStart24.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone24.StartColumn).Rows.Item($importedvariables_FS.Phone24.Row).Text
		$richtextbox_FS_PhStart25.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone25.StartColumn).Rows.Item($importedvariables_FS.Phone25.Row).Text
		
		$richtextbox_FS_PhEnd1.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone1.EndColumn).Rows.Item($importedvariables_FS.Phone1.Row).Text
		if ($richtextbox_FS_PhEnd1.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd1.Visible = $false
		}
		$richtextbox_FS_PhEnd2.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone2.EndColumn).Rows.Item($importedvariables_FS.Phone2.Row).Text
		if ($richtextbox_FS_PhEnd2.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd2.Visible = $false
		}
		$richtextbox_FS_PhEnd3.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone3.EndColumn).Rows.Item($importedvariables_FS.Phone3.Row).Text
		if ($richtextbox_FS_PhEnd3.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd3.Visible = $false
		}
		$richtextbox_FS_PhEnd4.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone4.EndColumn).Rows.Item($importedvariables_FS.Phone4.Row).Text
		if ($richtextbox_FS_PhEnd4.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd4.Visible = $false
		}
		$richtextbox_FS_PhEnd5.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone5.EndColumn).Rows.Item($importedvariables_FS.Phone5.Row).Text
		if ($richtextbox_FS_PhEnd5.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd5.Visible = $false
		}
		$richtextbox_FS_PhEnd6.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone6.EndColumn).Rows.Item($importedvariables_FS.Phone6.Row).Text
		if ($richtextbox_FS_PhEnd6.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd6.Visible = $false
		}
		$richtextbox_FS_PhEnd7.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone7.EndColumn).Rows.Item($importedvariables_FS.Phone7.Row).Text
		if ($richtextbox_FS_PhEnd7.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd7.Visible = $false
		}
		$richtextbox_FS_PhEnd8.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone8.EndColumn).Rows.Item($importedvariables_FS.Phone8.Row).Text
		if ($richtextbox_FS_PhEnd8.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd8.Visible = $false
		}
		$richtextbox_FS_PhEnd9.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone9.EndColumn).Rows.Item($importedvariables_FS.Phone9.Row).Text
		if ($richtextbox_FS_PhEnd9.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd9.Visible = $false
		}
		$richtextbox_FS_PhEnd10.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone10.EndColumn).Rows.Item($importedvariables_FS.Phone10.Row).Text
		if ($richtextbox_FS_PhEnd10.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd10.Visible = $false
		}
		$richtextbox_FS_PhEnd11.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone11.EndColumn).Rows.Item($importedvariables_FS.Phone11.Row).Text
		if ($richtextbox_FS_PhEnd11.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd11.Visible = $false
		}
		$richtextbox_FS_PhEnd12.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone12.EndColumn).Rows.Item($importedvariables_FS.Phone12.Row).Text
		if ($richtextbox_FS_PhEnd12.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd12.Visible = $false
		}
		$richtextbox_FS_PhEnd13.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone13.EndColumn).Rows.Item($importedvariables_FS.Phone13.Row).Text
		if ($richtextbox_FS_PhEnd13.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd13.Visible = $false
		}
		$richtextbox_FS_PhEnd14.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone14.EndColumn).Rows.Item($importedvariables_FS.Phone14.Row).Text
		if ($richtextbox_FS_PhEnd14.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd14.Visible = $false
		}
		$richtextbox_FS_PhEnd15.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone15.EndColumn).Rows.Item($importedvariables_FS.Phone15.Row).Text
		if ($richtextbox_FS_PhEnd15.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd15.Visible = $false
		}
		
		$richtextbox_FS_PhEnd16.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone16.EndColumn).Rows.Item($importedvariables_FS.Phone16.Row).Text
		if ($richtextbox_FS_PhEnd16.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd16.Visible = $false
		}
		$richtextbox_FS_PhEnd17.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone17.EndColumn).Rows.Item($importedvariables_FS.Phone17.Row).Text
		if ($richtextbox_FS_PhEnd17.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd17.Visible = $false
		}
		$richtextbox_FS_PhEnd18.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone18.EndColumn).Rows.Item($importedvariables_FS.Phone18.Row).Text
		if ($richtextbox_FS_PhEnd18.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd18.Visible = $false
		}
		$richtextbox_FS_PhEnd19.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone19.EndColumn).Rows.Item($importedvariables_FS.Phone19.Row).Text
		if ($richtextbox_FS_PhEnd19.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd19.Visible = $false
		}
		$richtextbox_FS_PhEnd20.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone20.EndColumn).Rows.Item($importedvariables_FS.Phone20.Row).Text
		if ($richtextbox_FS_PhEnd20.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd20.Visible = $false
		}
		$richtextbox_FS_PhEnd21.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone21.EndColumn).Rows.Item($importedvariables_FS.Phone21.Row).Text
		if ($richtextbox_FS_PhEnd21.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd21.Visible = $false
		}
		$richtextbox_FS_PhEnd22.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone22.EndColumn).Rows.Item($importedvariables_FS.Phone22.Row).Text
		if ($richtextbox_FS_PhEnd22.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd22.Visible = $false
		}
		$richtextbox_FS_PhEnd23.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone23.EndColumn).Rows.Item($importedvariables_FS.Phone23.Row).Text
		if ($richtextbox_FS_PhEnd23.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd23.Visible = $false
		}
		$richtextbox_FS_PhEnd24.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone24.EndColumn).Rows.Item($importedvariables_FS.Phone24.Row).Text
		if ($richtextbox_FS_PhEnd24.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd24.Visible = $false
		}
		$richtextbox_FS_PhEnd25.text = $WorkSheet.Columns.Item($importedvariables_FS.Phone25.EndColumn).Rows.Item($importedvariables_FS.Phone25.Row).Text
		if ($richtextbox_FS_PhEnd25.Text -eq "#N/A")
		{
			$richtextbox_FS_PhEnd25.Visible = $false
		}
		
		$textbox_DellSupport1.Text = $WorkSheet.Columns.Item($importedvariables_FS.DellSupport1.Column).Rows.Item($importedvariables_FS.DellSupport1.Row).Text
		$textbox_DellSupport2.Text = $WorkSheet.Columns.Item($importedvariables_FS.DellSupport2.Column).Rows.Item($importedvariables_FS.DellSupport2.Row).Text
		$textbox_DellSupport3.Text = $WorkSheet.Columns.Item($importedvariables_FS.DellSupport3.Column).Rows.Item($importedvariables_FS.DellSupport3.Row).Text
		
		$textbox_FSChats1.Text = $WorkSheet.Columns.Item($importedvariables_FS.Chats1.Column).Rows.Item($importedvariables_FS.Chats1.Row).Text
		$textbox_FSChats2.Text = $WorkSheet.Columns.Item($importedvariables_FS.Chats2.Column).Rows.Item($importedvariables_FS.Chats2.Row).Text
		$textbox_FSChats3.Text = $WorkSheet.Columns.Item($importedvariables_FS.Chats3.Column).Rows.Item($importedvariables_FS.Chats3.Row).Text
		
		$textbox_FS_PTO1.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO1.Column).Rows.Item($importedvariables_FS.PTO1.Row).Text
		$textbox_FS_PTO2.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO2.Column).Rows.Item($importedvariables_FS.PTO2.Row).Text
		$textbox_FS_PTO3.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO3.Column).Rows.Item($importedvariables_FS.PTO3.Row).Text
		$textbox_FS_PTO4.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO4.Column).Rows.Item($importedvariables_FS.PTO4.Row).Text
		$textbox_FS_PTO5.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO5.Column).Rows.Item($importedvariables_FS.PTO5.Row).Text
		$textbox_FS_PTO6.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO6.Column).Rows.Item($importedvariables_FS.PTO6.Row).Text
		$textbox_FS_PTO7.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO7.Column).Rows.Item($importedvariables_FS.PTO7.Row).Text
		$textbox_FS_PTO8.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO8.Column).Rows.Item($importedvariables_FS.PTO8.Row).Text
		$textbox_FS_PTO9.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO9.Column).Rows.Item($importedvariables_FS.PTO9.Row).Text
		$textbox_FS_PTO10.Text = $WorkSheet.Columns.Item($importedvariables_FS.PTO10.Column).Rows.Item($importedvariables_FS.PTO10.Row).Text
		
		$objExcel.DisplayAlerts = $False
		$objExcel.Quit()
		Stop-Process -name "Excel"
		Stop-Process -name excel.exe
		
		$global:FSDuties = 1
	}

}

$toolstripbutton_Exchange_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_Exchange
}

$toolstripbutton_o365_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_O365
}

$toolstripbutton_Azure_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_Azure
}

$toolstripbutton_Sharepoint_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_Sharepoint
}

$button_AD_Properties_Click={
	#TODO: Place custom script here
	$splitcontainer_AD_User.Visible = $true
	
	if ($datagridview_ADObjectSearch -eq $null)
	{
		$toolstrip_textbox_User_AD.Text = $datagridview_ADObjectSearch.SelectedCells[0].FormattedValue
		
		$toolstripbutton_GetInfo_ADUser.PerformClick()
		
		$param = $datagridview_ADObjectSearch.SelectedCells[0].FormattedValue
		Show-Edit_ADuser_psf $param
	}
	else
	{
		$param = $toolstrip_textbox_User_AD.Text
		Show-Edit_ADuser_psf $param
	}
}

$tabpage_AD_Groups_Enter={
	#TODO: Place custom script here
	$groupbox_ADGroups_ChangeCustom.Visible = $false
	$groupbox_ADGroups.Visible = $true
}

$datagridview_NTFS_AcessList_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	
	$Error.clear()
	
	try
	{
		$textbox_NTFS_ADGroup.Clear()
		$textbox_NTFS_ADGroupApproval.Clear()
		$textbox_NTFS_ADGroupOwner.Clear()
		$textbox_NTFS_ADGroupOwnerEmail.Clear()
		$richtextbox_NTFS_OwnerInfoError.Clear()
		$richtextbox_NTFS_OwnerInfoError.ForeColor = 'Black'
		
		$AD_group1 = $($datagridview_NTFS_AcessList.SelectedCells[0].FormattedValue).Replace("KIEWITPLAZA\", "")
		
		$textbox_NTFS_ADGroup.Text = $AD_group1
		
		$group_info = Get-ADGroup $AD_group1 -Properties Managedby, description
		
		$textbox_NTFS_ADGroupApproval.Text = "No approval info"
		
		switch -Wildcard ($group_info.description)
		{
			"*Required*" { $textbox_NTFS_ADGroupApproval.Text = "Required" }
			"*Notify*" { $textbox_NTFS_ADGroupApproval.Text = "Notify" }
			"*None*" { $textbox_NTFS_ADGroupApproval.Text = "None" }
		}
		
		$owner_info = Get-ADUser $group_info.Managedby -Properties Name, Mail | Select-Object Name, Mail
		if ($owner_info.enabled -eq $false)
		{
			$managersmanager = Get-ADUser $owner_info
			$managersmanager = $managersmanager.samaccountname
			$managersmanager_email = $managersmanager.mail
			$group_info_Managedby = $group_info.Managedby
			$richtextbox_NTFS_OwnerInfoError.Text = "$group_info_Managedby was disabled. Listing their supervisor."
		}
		else
		{
			$textbox_NTFS_ADGroupOwner.Text = $owner_info.name
			$textbox_NTFS_ADGroupOwnerEmail.Text = $owner_info.Mail
		}
	}
	catch
	{
		$textbox_NTFS_ADGroup.Clear()
		$textbox_NTFS_ADGroupApproval.Clear()
		$textbox_NTFS_ADGroupOwner.Text = "No owner found"
		$textbox_NTFS_ADGroupOwnerEmail.Clear()
		$richtextbox_NTFS_OwnerInfoError.Text = $Error.Exception.Message
	}
}

$datagridview_NTFS_AcessList_CellContentDoubleClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	if ($textbox_NTFS_ADGroupApproval.Text -contains "No*")
	{
		$ADgroup = $datagridview_NTFS_AcessList.SelectedCells[0].FormattedValue
		Show-NTFS_Permissions_psf $ADgroup
	}
	else
	{
		$OUTPUT = [System.Windows.Forms.MessageBox]::Show("Have you received documented approval in the ticket yet?", "Status", 4)
		if ($OUTPUT -eq "YES")
		{
			$ADgroup = $datagridview_NTFS_AcessList.SelectedCells[0].FormattedValue
			Show-NTFS_Permissions_psf $ADgroup
		}
		else
		{
			$richtextbox_NTFS_OwnerInfoError.Text = "This requires approval first."
		}
	}
}

$toolstripbutton_MS_AD_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_AD
}

$toolstripbutton7_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_Exchange
}

$toolstripbutton8_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_O365
}

$toolstripbutton9_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_Azure
}

$toolstripbutton10_Click={
	#TODO: Place custom script here
	$tabcontrol_MS.SelectedTab = $tabpage_MS_Sharepoint
}

$textbox_OldADAccount_Leave={
	#TODO: Place custom script here
	#if ($combobox_PERNR.SelectedText -eq $null -or $combobox_PERNR.Text -eq $null)
	#{
		$button_PERNR_Swap.Visible = $false
		
		#$textbox_OldADAccount.Text = $toolstrip_textbox_User_AD.text
		$textbox_OldADAccount_text = $textbox_OldADAccount.text -replace ".{2}$"
		$richtextbox_PERNR_Output.Clear()
		
		$newADUserObject = $(Get-ADUser -LDAPFilter:"(anr=$textbox_OldADAccount_text)").samaccountname
		
		Load-ComboBox $combobox_PERNR $newADUserObject
	#}
}

$datagridview_MapDrives_CellContentDoubleClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	$tabcontrol_Top.SelectedTab = $tabpage_Top_NTFSPermissions
	$textbox_NTFSPermissions.Text = $datagridview_MapDrives.SelectedCells[0].FormattedValue
	
	$button_GetNTFSPermissions.PerformClick()
}

$button_NTFS_Clear_Click={
	#TODO: Place custom script here
	$textbox_NTFSPermissions.Clear()
}

$linklabel_NTFS_ApprovalScript_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.LinkLabelLinkClickedEventArgs]
	#TODO: Place custom script here
	
	$NTFS_ApprovalScript | clip
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, NTFS Approval script"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, NTFS Approval script"
}

$lawyWinAdminToolStripMenuItem_Click={
	#TODO: Place custom script here
	start-process $installpath\bin\LazyWinAdmin.exe
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching LawyWinAdmin"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching LawyWinAdmin"
}

$toolstripbutton_AD_PWGenerateBulk_Click={
	#TODO: Place custom script here
	$newphrase = @{}
	$i = 0
	do
	{
		
		#-----------------------------
		# generating new password
		#-----------------------------
		do
		{
			$special_characters = @('!', '@', '$', '#', '%', '&')
			$special_character = get-random $special_characters
			
			#-----------------------------
			# generating new password
			#-----------------------------
			$random1 = Get-Content $dictionary | Get-Random
			$newphrase[$($i + 1)] = get-password $random1
			
			
			##get AD credentials and test if they are valid
			$username = "test.ps"
			
			##function to be able to test AD credentials
			Add-Type -AssemblyName System.DirectoryServices.AccountManagement
			
			$ct = [System.DirectoryServices.AccountManagement.ContextType]::Domain
			$pc = New-Object System.DirectoryServices.AccountManagement.PrincipalContext($ct, $Domain_com)
			
			$Valid = @{
				IsValid	    = $pc.ValidateCredentials($username, $newphrase).ToString()
			}
			$ValidTest = (New-Object PSObject -Property $Valid)
			
		}
		while ($ValidTest.isvalid.text -eq $false)
		$i = $i + 1
	}
	while ($i -lt $toolstriptextbox_AD_PW.Text)
	
	#-----------------------------
	# displaying new password
	#-----------------------------
	$richtextbox_AD_UsersLeft.Text = $newphrase | Format-List | Out-String
	$richtextbox_AD_UsersRight.Clear()
	$richtextbox_AD_UsersGroups.Clear()
	
	$splitcontainer_AD_User.Visible = $false
	$richtextbox_AD_UsersRight.Visible = $false
	$richtextbox_AD_UsersGroups.Visible = $false
	$richtextbox_AD_UsersLeft.Visible = $true
	$datagridview_AD_DirectReports.Visible = $false
	
	
	#-----------------------------
	# writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Generating new password from dictionary for User"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Generating new password from dictionary for User"
}


$toolstripbutton_AD_PWCopy2Clip_Click={
	#TODO: Place custom script here
	$toolstriptextbox_Password_ADUser.text | clip
}

$button_TWDBSync_Click={
	#TODO: Place custom script here
	Start-Process $twdb
}

$buttonRandomWordGenerator_Click={
	#TODO: Place custom script here
	$textbox_Settings_PW_output.Clear()
	
	$textbox_Settings_PW_output.Text = "Looking online for words..... `r`n"
	$Request = Invoke-WebRequest -Uri $uri -Verbose
	
	remove-item $randomfile
	$Request.Content | out-file $randomfile
	
	$words = Get-Content $randomfile
	remove-item $randomfile
	
	$textbox_Settings_PW_output.AppendText("Received words `r`n")
	$textbox_Settings_PW_output.AppendText("Saving random words from received list.... `r`n")
	
	$i = "0"
	do
	{
		$word = get-random $words
		
		if ($word.length -gt "4")
		{
			#$textbox_Settings_PW_output.AppendText("$i `r`n")
			$word | out-file $randomfile -Append
		}
		$i = [int]$i + 1
	}
	while ($i -lt $passwordvariables.Random.SaveLength)
	
	#Filter out common words
	$textbox_Settings_PW_output.Text = "Removing from exclusion list..... `r`n"
	
	$words = get-content $randomfile
	$ExcludedWords = Get-Content $ExcludedWordFile
	remove-item $randomfile
	
	ForEach ($Word in $Words)
	{
		if ($ExcludedWords -notContains $Word)
		{
			$word | out-file $randomfile -Append
		}
		else
		{
			$textbox_Settings_PW_output.AppendText("This word was removed: $Word `r`n")
		}
	}
	
	$textbox_Settings_PW_output.Text = "New Random list generated"

}

$uSErGroupSearchToolStripMenuItem_Click={
	#TODO: Place custom script here
	$cmd = "$env:windir\system32\rundll32.exe"
	$param = "dsquery.dll,OpenQueryWindow"
	Start-Process $cmd $param
}

$pCSearchToolStripMenuItem_Click={
	#TODO: Place custom script here
	
}

$linklabel_NTFS_AccessConfirmation_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.LinkLabelLinkClickedEventArgs]
	#TODO: Place custom script here
	$NTFS_AccessConfirmation | clip
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, NTFS Access Confirmation script"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, NTFS Access Confirmation script"
}

$button_NTFS_RDP_Click={
	#TODO: Place custom script here
	Start-Process c:\windows\system32\mstsc.exe -WorkingDirectory "C:\Windows\system32"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching Remote desktop utility"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Remote desktop utility"
}

$toolstripbutton11_Click={
	#TODO: Place custom script here
	$tabcontrol_Top.SelectedTab = $tabpage_Top_Networking
}

$button_DNS_ResolveIP_Click= {
	#TODO: Place custom script here
	$richtextbox_Networking_Output.Visible = $false
	$datagridview_NetworkOutput.Visible = $true
	$Error.clear()
	
	$nslookup = resolve-dnsname $toolstriptextbox_Networking_Object.Text -NoHostsFile
	
	if ($Error.Exception -eq $null)
	{
		$route = ConvertTo-DataTable -InputObject $nslookup
		Load-DataGridView -DataGridView $datagridview_NetworkOutput -Item $route
	}
	elseif ($Error.Exception -like "*DNS name does not exist*")
	{
		$richtextbox_Networking_Output.Visible = $true
		$datagridview_NetworkOutput.Visible = $false
		$richtextbox_Networking_Output.Text = $Error.Exception.Message
	}
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	
	$toolstriptextbox_Networking_Object_Text = $toolstriptextbox_Networking_Object.Text
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, DNS Resolution: $toolstriptextbox_Networking_Object_Text"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching Remote desktop utility"
}

$button_DNS_Ping_Click={
	#TODO: Place custom script here
	<#
	$richtextbox_Networking_Output.Visible = $true
	$datagridview_NetworkOutput.Visible = $false

	$ping = & ping $toolstriptextbox_Networking_Object.Text | Format-Table -AutoSize | out-string
	$richtextbox_Networking_Output.Text = $ping
	#>
	
	start-process ping -ArgumentList $($toolstriptextbox_Networking_Object.Text), -t;
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Pinging a PC, IP address of $toolstriptextbox_Networking_Object :: $ip"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Pinging a PC"
}

$toolstripbutton_Network_IPConfig_Click={
	#TODO: Place custom script here
	$richtextbox_Networking_Output.Visible = $true
	$datagridview_NetworkOutput.Visible = $false
	
	$richtextbox_Networking_Output.Text = Get-IP -ComputerName $toolstriptextbox_Networking_Object.Text | Format-List Name, IP4, IP4Subnet, DefaultGWY, MacAddress, DNSServer, WinsPrimary, WinsSecondary | Out-String
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, IPConfig lookup"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, IPConfig lookup"
}

$toolstripbutton_Network_Route_Click={
	#TODO: Place custom script here
	$richtextbox_Networking_Output.Visible = $false
	$datagridview_NetworkOutput.Visible = $true
	
	#$richtextbox_Networking_Output.Text = Get-Routetable -ComputerName $toolstriptextbox_Networking_Object.Text | ft -auto | Out-String
	
	$route = ConvertTo-DataTable -InputObject $(Get-Routetable -ComputerName $toolstriptextbox_Networking_Object.Text)
	
	Load-DataGridView -DataGridView $datagridview_NetworkOutput -Item $route
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Network Route check"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Network Route check"
}


$toolstripbutton_Network_ConectTest_Click={
	#TODO: Place custom script here
	$richtextbox_Networking_Output.Visible = $false
	$datagridview_NetworkOutput.Visible = $true
	
	$connectroute = ConvertTo-DataTable -InputObject $(Test-Server -computername $toolstriptextbox_Networking_Object.Text)
	Load-DataGridView -DataGridView $datagridview_NetworkOutput -Item $connectroute
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Network Connectivity Test"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Network Connectivity Test"
	
}

$toolstripbutton_Network_InterfaceCheck_Click={
	#TODO: Place custom script here
	$richtextbox_Networking_Output.Visible = $false
	$datagridview_NetworkOutput.Visible = $true
	
	Get-NICInfo -ComputerName $ComputerName
	
	$interface_Check = ConvertTo-DataTable -InputObject $(Get-NICInfo -ComputerName $toolstriptextbox_Networking_Object.Text )
	Load-DataGridView -DataGridView $datagridview_NetworkOutput -Item $interface_Check
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Network Interface Check"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Network Interface Check"
}

$buttonCheckUPLevel_Click={
	#TODO: Place custom script here
	$path = $textbox_NTFSPermissions.Text
	$path1 = $path.Replace($($path | Split-Path -Leaf), "")
	
	$textbox_NTFSPermissions.Text = $path1.substring(0, $path1.Length - 1)
	
	$button_GetNTFSPermissions.PerformClick()
}


$sAPPWResetToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "$bin\SAP_PW.oft"
	
	#-----------------------------
	# writing to log files
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Launching email template for SAP PW Reset"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Launching email template for SAP PW Reset"
}

$tabpage_Settings_Lunch_Enter={
	#TODO: Place custom script here
	if ($global:LunchBuddies -eq "0")
	{
		#-----------------------------
		## define duties info
		#-----------------------------
		$objExcel = New-Object -ComObject Excel.Application
		$objExcel.Visible = $false
		
		#$WorkBook = $objExcel.Workbooks.Open($importedvariables.Workbook.Workbook)
		$WorkBook = $objExcel.Workbooks.Open($onedriveLocal)
		
		
		#---------------------------------------------------------------------------------------------------------------------------------
		## What is the tab you want to look up on the Ticket watch sheet for servide desk info
		#---------------------------------------------------------------------------------------------------------------------------------
		$WorkSheet = $WorkBook.sheets.item($importedvariables_lunch.worksheet.LunchWorksheet)
		
		#-----------------------------
		## painting lunch schedule info
		#-----------------------------
		$richtextbox_LunchA1_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA1.Column).Rows.Item($importedvariables_lunch.LunchA1.Row).Text
		$richtextbox_LunchA2_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA2.Column).Rows.Item($importedvariables_lunch.LunchA2.Row).Text
		$richtextbox_LunchA3_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA3.Column).Rows.Item($importedvariables_lunch.LunchA3.Row).Text
		$richtextbox_LunchA4_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA4.Column).Rows.Item($importedvariables_lunch.LunchA4.Row).Text
		$richtextbox_LunchA5_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA5.Column).Rows.Item($importedvariables_lunch.LunchA5.Row).Text
		$richtextbox_LunchA6_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA6.Column).Rows.Item($importedvariables_lunch.LunchA6.Row).Text
		$richtextbox_LunchA7_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA7.Column).Rows.Item($importedvariables_lunch.LunchA7.Row).Text
		$richtextbox_LunchA8_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA8.Column).Rows.Item($importedvariables_lunch.LunchA8.Row).Text
		
		$richtextbox_LunchB1_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB1.Column).Rows.Item($importedvariables_lunch.LunchB1.Row).Text
		$richtextbox_LunchB1_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB2.Column).Rows.Item($importedvariables_lunch.LunchB2.Row).Text
		$richtextbox_LunchB2_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB3.Column).Rows.Item($importedvariables_lunch.LunchB3.Row).Text
		$richtextbox_LunchB3_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB4.Column).Rows.Item($importedvariables_lunch.LunchB4.Row).Text
		$richtextbox_LunchB4_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB5.Column).Rows.Item($importedvariables_lunch.LunchB5.Row).Text
		$richtextbox_LunchB5_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB6.Column).Rows.Item($importedvariables_lunch.LunchB6.Row).Text
		
		$richtextbox_LunchC1_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC1.Column).Rows.Item($importedvariables_lunch.LunchC1.Row).Text
		$richtextbox_LunchC2_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC2.Column).Rows.Item($importedvariables_lunch.LunchC2.Row).Text
		$richtextbox_LunchC3_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC3.Column).Rows.Item($importedvariables_lunch.LunchC3.Row).Text
		$richtextbox_LunchC4_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC4.Column).Rows.Item($importedvariables_lunch.LunchC4.Row).Text
		$richtextbox_LunchC5_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC5.Column).Rows.Item($importedvariables_lunch.LunchC5.Row).Text
		$richtextbox_LunchC6_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC6.Column).Rows.Item($importedvariables_lunch.LunchC6.Row).Text
		$richtextbox_LunchC7_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC7.Column).Rows.Item($importedvariables_lunch.LunchC7.Row).Text
		$richtextbox_LunchC8_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC8.Column).Rows.Item($importedvariables_lunch.LunchC8.Row).Text
		
		$objExcel.DisplayAlerts = $False
		$objExcel.Quit()
		Stop-Process -name "Excel"
		Stop-Process -name excel.exe
		
		$global:LunchBuddies = 1
	}
}

$buttonSDLunches_Click={
	#TODO: Place custom script here
	Show-SDLunchBuddy_psf
}

$buttonRefresh_Click={
	#TODO: Place custom script here
	#-----------------------------
	## define duties info
	#-----------------------------
	$objExcel = New-Object -ComObject Excel.Application
	$objExcel.Visible = $false
	
	#$WorkBook = $objExcel.Workbooks.Open($importedvariables.Workbook.Workbook)
	$WorkBook = $objExcel.Workbooks.Open($onedriveLocal)
	
	
	#---------------------------------------------------------------------------------------------------------------------------------
	## What is the tab you want to look up on the Ticket watch sheet for servide desk info
	#---------------------------------------------------------------------------------------------------------------------------------
	$WorkSheet = $WorkBook.sheets.item($importedvariables_lunch.worksheet.LunchWorksheet)
	
	#-----------------------------
	## painting lunch schedule info
	#-----------------------------
	$richtextbox_LunchA1_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA1.Column).Rows.Item($importedvariables_lunch.LunchA1.Row).Text
	$richtextbox_LunchA2_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA2.Column).Rows.Item($importedvariables_lunch.LunchA2.Row).Text
	$richtextbox_LunchA3_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA3.Column).Rows.Item($importedvariables_lunch.LunchA3.Row).Text
	$richtextbox_LunchA4_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA4.Column).Rows.Item($importedvariables_lunch.LunchA4.Row).Text
	$richtextbox_LunchA5_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA5.Column).Rows.Item($importedvariables_lunch.LunchA5.Row).Text
	$richtextbox_LunchA6_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA6.Column).Rows.Item($importedvariables_lunch.LunchA6.Row).Text
	$richtextbox_LunchA7_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA7.Column).Rows.Item($importedvariables_lunch.LunchA7.Row).Text
	$richtextbox_LunchA8_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchA8.Column).Rows.Item($importedvariables_lunch.LunchA8.Row).Text
	
	$richtextbox_LunchB1_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB1.Column).Rows.Item($importedvariables_lunch.LunchB1.Row).Text
	$richtextbox_LunchB1_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB2.Column).Rows.Item($importedvariables_lunch.LunchB2.Row).Text
	$richtextbox_LunchB2_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB3.Column).Rows.Item($importedvariables_lunch.LunchB3.Row).Text
	$richtextbox_LunchB3_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB4.Column).Rows.Item($importedvariables_lunch.LunchB4.Row).Text
	$richtextbox_LunchB4_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB5.Column).Rows.Item($importedvariables_lunch.LunchB5.Row).Text
	$richtextbox_LunchB5_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchB6.Column).Rows.Item($importedvariables_lunch.LunchB6.Row).Text
	
	$richtextbox_LunchC1_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC1.Column).Rows.Item($importedvariables_lunch.LunchC1.Row).Text
	$richtextbox_LunchC2_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC2.Column).Rows.Item($importedvariables_lunch.LunchC2.Row).Text
	$richtextbox_LunchC3_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC3.Column).Rows.Item($importedvariables_lunch.LunchC3.Row).Text
	$richtextbox_LunchC4_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC4.Column).Rows.Item($importedvariables_lunch.LunchC4.Row).Text
	$richtextbox_LunchC5_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC5.Column).Rows.Item($importedvariables_lunch.LunchC5.Row).Text
	$richtextbox_LunchC6_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC6.Column).Rows.Item($importedvariables_lunch.LunchC6.Row).Text
	$richtextbox_LunchC7_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC7.Column).Rows.Item($importedvariables_lunch.LunchC7.Row).Text
	$richtextbox_LunchC8_Name.Text = $WorkSheet.Columns.Item($importedvariables_lunch.LunchC8.Column).Rows.Item($importedvariables_lunch.LunchC8.Row).Text
	
	$objExcel.DisplayAlerts = $False
	$objExcel.Quit()
	Stop-Process -name "Excel"
	Stop-Process -name excel.exe
}


$button_Exch_Users_HideUnhideFromGAL_Click={
	#TODO: Place custom script here
	$splitcontainer_Exch_Users.Visible = $true
	
	$GAL_User = Get-ADuser -filter { (samaccountname -eq $toolstrip_textbox_User_AD.Text) -or (displayname -eq $toolstrip_textbox_User_AD.Text) -or (mail -eq $toolstrip_textbox_User_AD.Text) -or (universalprincipalname -like $toolstrip_textbox_User_AD.Text) } -Properties msExchHideFromAddressLists | Where-Object {$_.name -notlike "*admin"}
	
	if ($GAL_User.msExchHideFromAddressLists -eq $null)
	{
		set-aduser $GAL_User -replace @{ msExchHideFromAddressLists = $true } -Verbose
	}
	elseif ($GAL_User.msExchHideFromAddressLists -eq 'True')
	{
		set-aduser $GAL_User -replace @{ msExchHideFromAddressLists = $false } -Verbose
	}
	else
	{
		set-aduser $GAL_User -remove @{ msExchHideFromAddressLists = $false } -Verbose
	}

	$toolstripbutton_GetInfo_ADUser.PerformClick()
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $pcname, Toggling hide/unhide from GAL variable"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Toggling hide/unhide from GAL variable"
}

$button_Exch_Users_SMTP_Click={
	#TODO: Place custom script here
	$groupbox_Exch_SMTPEdit.Visible = $true
	$groupbox_Exch_Mailbox_output.Visible = $false
	$groupbox_Exch_ActiveSync.Visible = $false
	$groupbox_Exch_Delegation.Visible = $false
	
	$smtp = get-aduser $toolstrip_textbox_User_AD.Text -Properties proxyaddresses | Select-Object proxyaddresses
	
	$alias = @()
	$array = @()
	
	foreach ($entry in $smtp.proxyaddresses.Value)
	{
		$type = $entry.split(':')
		$alias = New-Object PSObject
		$alias | Add-Member -type NoteProperty -Name 'Type' -Value $type[0]
		$alias | Add-Member -type NoteProperty -Name 'Email Address' -Value $type[1]
		$array += $alias
	}
	
	$Exch_DT = ConvertTo-DataTable -InputObject $array
	Load-DataGridView -DataGridView $datagridview_Exch_SMTPEdit -Item $Exch_DT
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Lookup of SMTP info"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Lookup of SMTP info"
}

$button_Exch_SMTPCancel_Click={
	#TODO: Place custom script here
	$groupbox_Exch_SMTPEdit.Visible = $false
	$groupbox_Exch_Mailbox_output.Visible = $true
	$groupbox_Exch_ActiveSync.Visible = $false
	$groupbox_Exch_Delegation.Visible = $false
}

$button_Exch_Users_Delegation_Click={
	#TODO: Place custom script here
	$groupbox_Exch_SMTPEdit.Visible = $false
	$groupbox_Exch_Mailbox_output.Visible = $false
	$groupbox_Exch_ActiveSync.Visible = $false
	$groupbox_Exch_Delegation.Visible = $true
	
	$FullAccess_DT = ConvertTo-DataTable -InputObject $($global:delegate | Select-Object Identity)
	Load-DataGridView -DataGridView $datagridview_Exch_Delegate_FullAccess -Item $FullAccess_DT
	
	$SendAs_DT = ConvertTo-DataTable -InputObject $($global:sendas | Select-Object Identity)
	Load-DataGridView -DataGridView $datagridview_Exch_Delegate_SendAs -Item $SendAs_DT
	
	$SendOnBehalf_DT = ConvertTo-DataTable -InputObject $global:O365_ExchInfo.GrantSendOnBehalfTo
	Load-DataGridView -DataGridView $datagridview_Exch_Delegate_SendOnBehalf -Item $SendOnBehalf_DT
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Delegation lookup in Exchange"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Delegation lookup in Exchange"
}

$toolstripbutton_Network_clear_Click={
	#TODO: Place custom script here
	$toolstriptextbox_Networking_Object.Clear()
}

$textbox_PernerSWAP_TicketNumber_TextChanged={
	#TODO: Place custom script here
	$button_PERNR_Swap.Visible = $true
}


$toolstripbutton_AD_PWBulkApply_Click={
	#TODO: Place custom script here
	$groupbox_ADuser_Output.Visible = $false
	$groupbox_PERNRSwap.Visible = $false
	$groupbox_AD_BulkPW.Visible = $true
}

$button_AD_BulkPWApply_Click={
	#TODO: Place custom script here
	Remove-Item $bulkPW -Force
	
	$name = "Name"
	$name | Out-File $bulkPW -Force
	$richtextbox_AD_BulkdPWUserList.Text | Out-File $bulkPW -Append -Force
	
	$partners = Import-Csv $bulkPW
	foreach ($account in $partners.name)
	{
		#-----------------------------
		# generating new password
		#-----------------------------
		
		Write-Host $account
		
		$special_characters = @('!', '@', '$', '#', '%', '&')
		$special_character = get-random $special_characters
		
		#-----------------------------
		# generating new password
		#-----------------------------
		$random1 = Get-Content $dictionary | Get-Random
		$newphrase = get-password $random1
		
		Set-ADAccountPassword $account -Reset -NewPassword (ConvertTo-SecureString -AsPlainText $newphrase -Force) -verbose
		set-aduser $account -ChangePasswordAtLogon $false -Verbose
		
		$array = @{ }
		$array = New-Object PSObject
		$array | Add-Member -Type NoteProperty -Name 'Username' -Value $account
		$array | Add-Member -Type NoteProperty -Name 'Password' -Value $newphrase
		$array | Export-Csv $bulkPWComplete -Force -Append
		$array = $null
		
	}
	Start-Process $bulkPWComplete
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Bulk generate and application of PWs"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Bulk generate and application of PWs"
}

$button_NTFS_UserCheck_Click={
	#TODO: Place custom script here
	$group = "*" + $textbox_NTFS_ADGroup.text + "*"
	$textbox_NTFS_ADGrouptext = $textbox_NTFS_ADGroup.text
	$textbox_NTFS_UserCheckText = $textbox_NTFS_UserCheck.Text
	
	if ( (Get-ADUser $textbox_NTFS_UserCheck.Text -Properties memberof).memberof -like $group)
	{
		$richtextbox_NTFS_OwnerInfoError.ForeColor = 'Green'
		$richtextbox_NTFS_OwnerInfoError.Text = "$textbox_NTFS_UserCheckText is a member of $textbox_NTFS_ADGrouptext"
	}
	else
	{
		$richtextbox_NTFS_OwnerInfoError.ForeColor = 'Red'
		$richtextbox_NTFS_OwnerInfoError.Text = "$textbox_NTFS_UserCheckText is NOT a meber of that group"
	}
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Checking if user is in AD group from NTFS permissions check"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Checking if user is in AD group from NTFS permissions check"
}

$textbox_NTFS_UserCheck_KeyDown=[System.Windows.Forms.KeyEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.KeyEventArgs]
	#TODO: Place custom script here
	if ($_.KeyCode -eq 'Enter')
	{
		$button_NTFS_UserCheck.PerformClick()
	}
}

$datagridview_Exch_Search_CellMouseDoubleClick=[System.Windows.Forms.DataGridViewCellMouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellMouseEventArgs]
	#TODO: Place custom script here
	$toolstrip_textbox_User_AD.Text = $datagridview_Exch_Search.SelectedCells[0].FormattedValue
	
	$toolstripbutton_GetInfo_ADUser.PerformClick()
}

$button_Exch_MessagingFixAll_Click={
	#TODO: Place custom script here
	$richtextbox_Exch_UsersRight.clear()
	$richtextbox_Exch_UsersDelegation.clear()
	$richtextbox_Exch_SMTPInfo.clear()
	
	$splitcontainer_Exch_Users.Visible = $false
	
	$Found_user = get-aduser -Identity $toolstrip_textbox_User_AD.Text -Properties *
	
	$richtextbox_Exch_UsersLeft.Text = "Starting fix for account...... `n"
	
	TRY
	{
		$richtextbox_Exch_UsersLeft.AppendText("Setting step 1: msRTCSIP-UserEnabled to True `n")
		set-aduser $Found_user -REPLACE @{ "msRTCSIP-UserEnabled" = $True } -verbose
		sleep -seconds 1
	}
	catch
	{
		$richtextbox_Exch_UsersLeft.Text = "Setting of step 1: msRTCSIP-UserEnabled failed. Please check username and try again."
	}
	
	try
	{
		$richtextbox_Exch_UsersLeft.AppendText("Setting step 2: msRTCSIP-DeploymentLocator to sipfed.online.lync.com `n")
		Set-aduser $Found_user -replace @{ "msRTCSIP-DeploymentLocator" = "sipfed.online.lync.com" } -verbose
		sleep -seconds 1
	}
	catch
	{
		$richtextbox_Exch_UsersLeft.Text = "Setting step 2: msRTCSIP-DeploymentLocator failed. Please check username and try again."
	}
		
	try
	{
		$email = $Found_user.samaccountname + "@kiewit.com"
		$richtextbox_Exch_UsersLeft.AppendText("Setting step 3: main proxy email to $email `n")
		Set-aduser $Found_user -add @{ proxyAddresses = "smtp:$("$email")" } -verbose
		Start-sleep 10
	}
	catch
	{
		$richtextbox_Exch_UsersLeft.Text = "Setting step 3: main proxy email failed. Please check username and try again."
	}
		
		try
	{
		$richtextbox_Exch_UsersLeft.AppendText("Setting UPN of user `n")
		Set-aduser $Found_user -UserPrincipalName ("{0}@{1}" -f "$UserName", "kiewit.COM") -verbose
	}
	CATCH [Microsoft.ActiveDirectory.Management.ADException]
	{
		$richtextbox_Exch_UsersLeft.AppendText("UPN is already set properly. `n")
	}
	
	$richtextbox_Exch_UsersLeft.AppendText("Checking steps were performed. Will show output of settings once done.")
	start-sleep -s 15
	
	$checkuser = get-aduser $Found_user -Properties * | select SamAccountName, Enabled, ExtensionAttribute11, msRTCSIP-PrimaryUserAddress, msRTCSIP-UserEnabled, msRTCSIP-DeploymentLocator, userPrincipalName | Format-List | Out-String
	$richtextbox_Exch_UsersLeft.AppendText("`n")
	$richtextbox_Exch_UsersLeft.AppendText($checkuser)
	
	#-----------------------------
	## writing to log file
	#-----------------------------
	$date = $(Get-Date).tostring("MM-dd-yyyy")
	$time = $(get-date -UFormat %R)
	Log-Write -LogPath $LogFile -LineValue "$date, $time, $userName, $userName, $pcname, Running Messaging fix all script"
	
	Log-Write -LogPath $logusagefile -LineValue "$date, $time, $userName, $pcname, Running Messaging fix all script"
}

$button_MassRemoveGroups_AD_User_Click={
	#TODO: Place custom script here
	
	$param = $toolstrip_textbox_User_AD.Text
	Show-MassEditGroups4user_psf $param
}]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>